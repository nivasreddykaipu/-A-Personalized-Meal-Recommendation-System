{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## User based Recommendation (Collaborative filtering)\n","- If user A and user B share similar profile, then meal liked by User B but not rated by A, are recommended to A\n","- User-based: measure the similarity between target - users and other users\n","- Collaborative filtering systems make recommendations based on historic usersâ€™ preference for items (clicked, watched, purchased, liked, rated, etc.)."],"metadata":{"id":"cl6Ws8ohWfwf"}},{"cell_type":"markdown","source":["### Algorithm - K_Nearest-neighbor"],"metadata":{"id":"Cs3732hOWroJ"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"zBCcn_xLWEHp","executionInfo":{"status":"ok","timestamp":1683207217868,"user_tz":240,"elapsed":4178,"user":{"displayName":"Nivas Reddy Kaipu","userId":"04810139041352872788"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import sklearn\n","from sklearn.neighbors import NearestNeighbors"]},{"cell_type":"code","source":["pd.read_csv('user_profiles.csv').head(2)\n","        "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":191},"id":"xNHKwTPknBT2","executionInfo":{"status":"ok","timestamp":1683207217870,"user_tz":240,"elapsed":47,"user":{"displayName":"Nivas Reddy Kaipu","userId":"04810139041352872788"}},"outputId":"715f967c-2739-424d-f076-3165962bef17"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  user_id veg_nonveg                                           nutrient  \\\n","0  user_1        veg  iron calcium sodium iodine magnesium chloride ...   \n","1  user_2        veg  iron calcium sodium iodine vitamin_a vitamin_k...   \n","\n","                                             disease  \\\n","0  kidney_disease hypertension heart_disease obes...   \n","1  kidney_disease hypertension heart_disease obes...   \n","\n","                                                diet  \n","0  high_protien_diet vegan_diet low_fat_diet low_...  \n","1  mediterranean_diet high_protien_diet vegan_die...  "],"text/html":["\n","  <div id=\"df-8e644e34-db43-4185-8301-3d4742319eaf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>veg_nonveg</th>\n","      <th>nutrient</th>\n","      <th>disease</th>\n","      <th>diet</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>user_1</td>\n","      <td>veg</td>\n","      <td>iron calcium sodium iodine magnesium chloride ...</td>\n","      <td>kidney_disease hypertension heart_disease obes...</td>\n","      <td>high_protien_diet vegan_diet low_fat_diet low_...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>user_2</td>\n","      <td>veg</td>\n","      <td>iron calcium sodium iodine vitamin_a vitamin_k...</td>\n","      <td>kidney_disease hypertension heart_disease obes...</td>\n","      <td>mediterranean_diet high_protien_diet vegan_die...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e644e34-db43-4185-8301-3d4742319eaf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8e644e34-db43-4185-8301-3d4742319eaf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8e644e34-db43-4185-8301-3d4742319eaf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["pd.read_csv('recent_activity.csv').head(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"jqaAhhkEnDrM","executionInfo":{"status":"ok","timestamp":1683207217873,"user_tz":240,"elapsed":38,"user":{"displayName":"Nivas Reddy Kaipu","userId":"04810139041352872788"}},"outputId":"c43a8ebb-2c87-4053-96ad-27f61661b23b"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   user_id    meal_id  rated  liked  searched  purchased            timestamp\n","0  user_59  meal_id_2      0      0         1          0  2020-03-01 02:00:34\n","1  user_96  meal_id_9      1      0         0          0  2020-03-01 18:05:06"],"text/html":["\n","  <div id=\"df-46c491e5-58ff-4a99-adb7-4c3e26052cea\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>meal_id</th>\n","      <th>rated</th>\n","      <th>liked</th>\n","      <th>searched</th>\n","      <th>purchased</th>\n","      <th>timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>user_59</td>\n","      <td>meal_id_2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2020-03-01 02:00:34</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>user_96</td>\n","      <td>meal_id_9</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2020-03-01 18:05:06</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-46c491e5-58ff-4a99-adb7-4c3e26052cea')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-46c491e5-58ff-4a99-adb7-4c3e26052cea button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-46c491e5-58ff-4a99-adb7-4c3e26052cea');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["class Recommender:\n","    \n","    def __init__(self):\n","        self.df = pd.read_csv('user_profiles.csv')\n","        self.dataset = pd.read_csv('dataset.csv')\n","        self.activity = pd.read_csv('recent_activity.csv')\n","    \n","    def get_features(self):\n","        #getting dummies of dataset\n","        nutrient_dummies = self.df.nutrient.str.get_dummies(sep=' ')\n","        disease_dummies = self.df.disease.str.get_dummies(sep=' ')\n","        diet_dummies = self.df.diet.str.get_dummies(sep=' ')\n","        feature_df = pd.concat([nutrient_dummies, disease_dummies, diet_dummies],axis=1)\n","     \n","        return feature_df\n","    \n","    def k_neighbor(self,inputs):\n","        \n","        feature_df = self.get_features()\n","        #initializing model with k=20 neighbors\n","        model = NearestNeighbors(n_neighbors=20, algorithm='ball_tree')\n","        # fitting model with dataset features\n","        model.fit(feature_df)\n","        \n","        df_results = pd.DataFrame(columns=list(self.df.columns))\n","        \n","        # getting distance and indices for k nearest neighbor\n","        distnaces , indices = model.kneighbors(inputs)\n","\n","        for i in list(indices):\n","            df_results = df_results.append(self.df.loc[i])\n","                \n","#         df_results = df_result\n","        \n","        df_results = df_results.reset_index(drop=True)\n","        return df_results\n","    \n","    def user_based(self,user_profile,user_id):\n","        data = self.get_features()\n","        total_features = data.columns\n","        d = dict()\n","        for i in total_features: d[i]= 0\n","        for i in user_profile: d[i] = 1\n","        final_input = list(d.values())\n","        \n","        similar_users = self.k_neighbor([final_input])\n","        users = list(similar_users.user_id)\n","        results = self.activity[self.activity.user_id.isin(users)] #taking acitivies\n","\n","        results = results[results['user_id']!=user_id] # selecting those which are not reviewed by user\n","        \n","\n","        results = pd.merge(results, self.dataset, on='meal_id')\n","        results = results.filter(['meal_id', 'name','nutrient','veg_nonveg','price','review','diet','disease','description'])\n","        results = results.drop_duplicates(subset=['name'])\n","        results = results.reset_index(drop=True)\n","\n","        return results\n","        "],"metadata":{"id":"A_fbORsWkX0u","executionInfo":{"status":"ok","timestamp":1683207218029,"user_tz":240,"elapsed":10,"user":{"displayName":"Nivas Reddy Kaipu","userId":"04810139041352872788"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["Example User A == 'user_28' Profile says:"],"metadata":{"id":"DWgg4uuQlHaj"}},{"cell_type":"code","source":["profile_A = ['calcium','iron','diabeties','gluten_free_diet']\n","user_id = 'user_28' # asumming for example"],"metadata":{"id":"X3ReuxrLlR4t","executionInfo":{"status":"ok","timestamp":1683207218030,"user_tz":240,"elapsed":10,"user":{"displayName":"Nivas Reddy Kaipu","userId":"04810139041352872788"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["Finding Similar User"],"metadata":{"id":"mbIVGebnlV9u"}},{"cell_type":"code","source":["ob = Recommender()\n","data = ob.get_features()\n","total_features = data.columns\n","d = dict()\n","for i in total_features:\n","    d[i]= 0\n","for i in profile_A:\n","    d[i] = 1\n","\n","final_input = list(d.values())\n","similar_users = ob.k_neighbor([final_input]) # pass 2d array []\n","similar_users"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"E7cyYesclYFa","executionInfo":{"status":"ok","timestamp":1683207218031,"user_tz":240,"elapsed":11,"user":{"displayName":"Nivas Reddy Kaipu","userId":"04810139041352872788"}},"outputId":"e024bf22-b90d-4cbd-fa0c-9d088f321cb0"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but NearestNeighbors was fitted with feature names\n","  warnings.warn(\n","<ipython-input-4-64c6a6dd3d51>:31: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  df_results = df_results.append(self.df.loc[i])\n"]},{"output_type":"execute_result","data":{"text/plain":["    user_id veg_nonveg                                           nutrient  \\\n","0   user_81        veg                                               iron   \n","1   user_89        veg                                 iron carbohydrates   \n","2   user_83        veg  carbohydrates vitamin_e chromium copper manganese   \n","3   user_63        veg                             sodium iodine chloride   \n","4    user_9        veg                             sodium iodine chloride   \n","5   user_77        veg                                 iron carbohydrates   \n","6   user_44        veg                      iron calcium magnesium copper   \n","7   user_90        veg                           iron vitamin_a vitamin_k   \n","8   user_76        veg                             sodium iodine chloride   \n","9   user_16        veg                             sodium iodine chloride   \n","10  user_64        veg                   iron calcium vitamin_a vitamin_k   \n","11  user_94        veg               sodium iodine carbohydrates chloride   \n","12  user_52        veg                  sodium iodine chloride phosphorus   \n","13  user_49        veg                        calcium vitamin_d potassium   \n","14  user_11        veg                 iron vitamin_c vitamin_a vitamin_k   \n","15  user_56        veg          calcium carbohydrates vitamin_d potassium   \n","16  user_33        veg                                    iodine selenium   \n","17  user_47        veg                             sodium iodine chloride   \n","18  user_67        veg          calcium carbohydrates vitamin_d potassium   \n","19  user_65        veg            sodium iodine magnesium chloride copper   \n","\n","                                              disease  \\\n","0              obesity goitre anemia pregnancy scurvy   \n","1   obesity heart_disease anemia goitre pregnancy ...   \n","2              kidney_disease heart_disease diabeties   \n","3         goitre kidney_disease obesity heart_disease   \n","4         goitre kidney_disease obesity heart_disease   \n","5   obesity heart_disease anemia goitre pregnancy ...   \n","6   hypertension obesity goitre anemia pregnancy r...   \n","7              obesity goitre anemia pregnancy scurvy   \n","8   kidney_disease obesity heart_disease goitre pr...   \n","9         goitre kidney_disease obesity heart_disease   \n","10  hypertension obesity goitre anemia pregnancy r...   \n","11  kidney_disease hypertension heart_disease obes...   \n","12        goitre kidney_disease obesity heart_disease   \n","13  kidney_disease hypertension heart_disease obes...   \n","14             obesity goitre anemia pregnancy scurvy   \n","15  kidney_disease hypertension heart_disease obes...   \n","16                    pregnancy obesity goitre anemia   \n","17  kidney_disease goitre obesity heart_disease ri...   \n","18  kidney_disease hypertension heart_disease obes...   \n","19  kidney_disease hypertension heart_disease obes...   \n","\n","                                                 diet  \n","0   high_protien_diet low_fat_diet vegan_diet keto...  \n","1   high_protien_diet low_fat_diet vegan_diet keto...  \n","2      high_protien_diet low_fat_diet high_fiber_diet  \n","3                          low_sodium_diet vegan_diet  \n","4                          low_sodium_diet vegan_diet  \n","5   high_protien_diet low_fat_diet vegan_diet keto...  \n","6   high_protien_diet low_fat_diet vegan_diet keto...  \n","7   high_protien_diet low_fat_diet vegan_diet keto...  \n","8                          low_sodium_diet vegan_diet  \n","9          high_fiber_diet low_sodium_diet vegan_diet  \n","10  high_protien_diet low_fat_diet vegan_diet keto...  \n","11                         low_sodium_diet vegan_diet  \n","12            low_fat_diet low_sodium_diet vegan_diet  \n","13             low_fat_diet vegan_diet ketogenic_diet  \n","14  high_protien_diet low_fat_diet vegan_diet keto...  \n","15             low_fat_diet vegan_diet ketogenic_diet  \n","16  mediterranean_diet type_o_diet high_protien_di...  \n","17            low_fat_diet low_sodium_diet vegan_diet  \n","18             low_fat_diet vegan_diet ketogenic_diet  \n","19       high_protien_diet low_sodium_diet vegan_diet  "],"text/html":["\n","  <div id=\"df-ff7cd2b5-7304-4857-b126-5b54cec9d314\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>veg_nonveg</th>\n","      <th>nutrient</th>\n","      <th>disease</th>\n","      <th>diet</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>user_81</td>\n","      <td>veg</td>\n","      <td>iron</td>\n","      <td>obesity goitre anemia pregnancy scurvy</td>\n","      <td>high_protien_diet low_fat_diet vegan_diet keto...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>user_89</td>\n","      <td>veg</td>\n","      <td>iron carbohydrates</td>\n","      <td>obesity heart_disease anemia goitre pregnancy ...</td>\n","      <td>high_protien_diet low_fat_diet vegan_diet keto...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>user_83</td>\n","      <td>veg</td>\n","      <td>carbohydrates vitamin_e chromium copper manganese</td>\n","      <td>kidney_disease heart_disease diabeties</td>\n","      <td>high_protien_diet low_fat_diet high_fiber_diet</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>user_63</td>\n","      <td>veg</td>\n","      <td>sodium iodine chloride</td>\n","      <td>goitre kidney_disease obesity heart_disease</td>\n","      <td>low_sodium_diet vegan_diet</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>user_9</td>\n","      <td>veg</td>\n","      <td>sodium iodine chloride</td>\n","      <td>goitre kidney_disease obesity heart_disease</td>\n","      <td>low_sodium_diet vegan_diet</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>user_77</td>\n","      <td>veg</td>\n","      <td>iron carbohydrates</td>\n","      <td>obesity heart_disease anemia goitre pregnancy ...</td>\n","      <td>high_protien_diet low_fat_diet vegan_diet keto...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>user_44</td>\n","      <td>veg</td>\n","      <td>iron calcium magnesium copper</td>\n","      <td>hypertension obesity goitre anemia pregnancy r...</td>\n","      <td>high_protien_diet low_fat_diet vegan_diet keto...</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>user_90</td>\n","      <td>veg</td>\n","      <td>iron vitamin_a vitamin_k</td>\n","      <td>obesity goitre anemia pregnancy scurvy</td>\n","      <td>high_protien_diet low_fat_diet vegan_diet keto...</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>user_76</td>\n","      <td>veg</td>\n","      <td>sodium iodine chloride</td>\n","      <td>kidney_disease obesity heart_disease goitre pr...</td>\n","      <td>low_sodium_diet vegan_diet</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>user_16</td>\n","      <td>veg</td>\n","      <td>sodium iodine chloride</td>\n","      <td>goitre kidney_disease obesity heart_disease</td>\n","      <td>high_fiber_diet low_sodium_diet vegan_diet</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>user_64</td>\n","      <td>veg</td>\n","      <td>iron calcium vitamin_a vitamin_k</td>\n","      <td>hypertension obesity goitre anemia pregnancy r...</td>\n","      <td>high_protien_diet low_fat_diet vegan_diet keto...</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>user_94</td>\n","      <td>veg</td>\n","      <td>sodium iodine carbohydrates chloride</td>\n","      <td>kidney_disease hypertension heart_disease obes...</td>\n","      <td>low_sodium_diet vegan_diet</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>user_52</td>\n","      <td>veg</td>\n","      <td>sodium iodine chloride phosphorus</td>\n","      <td>goitre kidney_disease obesity heart_disease</td>\n","      <td>low_fat_diet low_sodium_diet vegan_diet</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>user_49</td>\n","      <td>veg</td>\n","      <td>calcium vitamin_d potassium</td>\n","      <td>kidney_disease hypertension heart_disease obes...</td>\n","      <td>low_fat_diet vegan_diet ketogenic_diet</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>user_11</td>\n","      <td>veg</td>\n","      <td>iron vitamin_c vitamin_a vitamin_k</td>\n","      <td>obesity goitre anemia pregnancy scurvy</td>\n","      <td>high_protien_diet low_fat_diet vegan_diet keto...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>user_56</td>\n","      <td>veg</td>\n","      <td>calcium carbohydrates vitamin_d potassium</td>\n","      <td>kidney_disease hypertension heart_disease obes...</td>\n","      <td>low_fat_diet vegan_diet ketogenic_diet</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>user_33</td>\n","      <td>veg</td>\n","      <td>iodine selenium</td>\n","      <td>pregnancy obesity goitre anemia</td>\n","      <td>mediterranean_diet type_o_diet high_protien_di...</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>user_47</td>\n","      <td>veg</td>\n","      <td>sodium iodine chloride</td>\n","      <td>kidney_disease goitre obesity heart_disease ri...</td>\n","      <td>low_fat_diet low_sodium_diet vegan_diet</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>user_67</td>\n","      <td>veg</td>\n","      <td>calcium carbohydrates vitamin_d potassium</td>\n","      <td>kidney_disease hypertension heart_disease obes...</td>\n","      <td>low_fat_diet vegan_diet ketogenic_diet</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>user_65</td>\n","      <td>veg</td>\n","      <td>sodium iodine magnesium chloride copper</td>\n","      <td>kidney_disease hypertension heart_disease obes...</td>\n","      <td>high_protien_diet low_sodium_diet vegan_diet</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff7cd2b5-7304-4857-b126-5b54cec9d314')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ff7cd2b5-7304-4857-b126-5b54cec9d314 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ff7cd2b5-7304-4857-b126-5b54cec9d314');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["recommending meals that are new to user A and reviwed by above users"],"metadata":{"id":"ZexVyCDSlb5Z"}},{"cell_type":"code","source":["recommendations = ob.user_based(profile_A,user_id) \n","recommendations"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":231},"id":"iFtRa3BjldN8","executionInfo":{"status":"ok","timestamp":1683207218238,"user_tz":240,"elapsed":215,"user":{"displayName":"Nivas Reddy Kaipu","userId":"04810139041352872788"}},"outputId":"afa14f85-89d5-484d-ee05-aa6dca9faf3f"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but NearestNeighbors was fitted with feature names\n","  warnings.warn(\n","<ipython-input-4-64c6a6dd3d51>:31: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  df_results = df_results.append(self.df.loc[i])\n"]},{"output_type":"execute_result","data":{"text/plain":["      meal_id              name                nutrient veg_nonveg  price  \\\n","0  meal_id_40  Mint Gur Sharbat  sodium iodine chloride        veg    245   \n","\n","                         diet                                      disease  \\\n","0  low_sodium_diet vegan_diet  goitre kidney_disease obesity heart_disease   \n","\n","                                         description  \n","0  https://food.ndtv.com/recipe-mint-gur-sharbat-...  "],"text/html":["\n","  <div id=\"df-ed1e07a2-8217-468f-9380-aaa58517cd91\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>meal_id</th>\n","      <th>name</th>\n","      <th>nutrient</th>\n","      <th>veg_nonveg</th>\n","      <th>price</th>\n","      <th>diet</th>\n","      <th>disease</th>\n","      <th>description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>meal_id_40</td>\n","      <td>Mint Gur Sharbat</td>\n","      <td>sodium iodine chloride</td>\n","      <td>veg</td>\n","      <td>245</td>\n","      <td>low_sodium_diet vegan_diet</td>\n","      <td>goitre kidney_disease obesity heart_disease</td>\n","      <td>https://food.ndtv.com/recipe-mint-gur-sharbat-...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed1e07a2-8217-468f-9380-aaa58517cd91')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ed1e07a2-8217-468f-9380-aaa58517cd91 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ed1e07a2-8217-468f-9380-aaa58517cd91');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]}]}