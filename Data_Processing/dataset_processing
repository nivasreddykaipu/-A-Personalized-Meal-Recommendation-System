{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["hY8_fw-7cegW","FcsZBrOCXtUF","kMAqg7zQd0A7","NuGOjbQHeXtW","VhoOISaiQL17","LUFpAO2fQxx_","G8DRhvAjRYYz","yovtEn3J_5HF","XvsH-Y-3BDf_","6Q-A47CZBkvZ","GSPz60JPCKJN"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Dataset Creation and Processing"],"metadata":{"id":"s7ZK7hfPXdes"}},{"cell_type":"markdown","source":["### 1. Importing packages"],"metadata":{"id":"hY8_fw-7cegW"}},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"DKO92nBrWvTH","executionInfo":{"status":"ok","timestamp":1683758591204,"user_tz":240,"elapsed":154,"user":{"displayName":"Nikhita Bharat upadhye","userId":"04343752995442062755"}},"outputId":"6ef5157b-b77a-4508-ac8a-9bff0f27fb51"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0                name sub_category  \\\n","0           0      Paneer Roastie      healthy   \n","1           1  Lauki Besan Cheela      healthy   \n","2           2      Paneer Paratha      healthy   \n","\n","                                          ingredient  \\\n","0  ['1 Cup Suji', '1 cup Curd ', '1/4 cup Capsicu...   \n","1  ['1 Cup lauki (bottle gourd), grated', '1 1/2 ...   \n","2  ['<b>For dough: </b>', '2 cups Whole Wheat flo...   \n","\n","                                         description category  \n","0  https://food.ndtv.com/recipe-paneer-roastie-95...      NaN  \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...      NaN  \n","2  https://food.ndtv.com/recipe-paneer-paratha-95...      NaN  "],"text/html":["\n","  <div id=\"df-77a586b6-4199-4cf7-8924-e8c78fc44db2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>name</th>\n","      <th>sub_category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Paneer Roastie</td>\n","      <td>healthy</td>\n","      <td>['1 Cup Suji', '1 cup Curd ', '1/4 cup Capsicu...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Lauki Besan Cheela</td>\n","      <td>healthy</td>\n","      <td>['1 Cup lauki (bottle gourd), grated', '1 1/2 ...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Paneer Paratha</td>\n","      <td>healthy</td>\n","      <td>['&lt;b&gt;For dough: &lt;/b&gt;', '2 cups Whole Wheat flo...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-paratha-95...</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77a586b6-4199-4cf7-8924-e8c78fc44db2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-77a586b6-4199-4cf7-8924-e8c78fc44db2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-77a586b6-4199-4cf7-8924-e8c78fc44db2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}],"source":["from bs4 import BeautifulSoup\n","import requests\n","import pandas as pd \n","import numpy as np\n","import warnings\n","import time\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import random\n","import datetime\n","import json\n","\n","import nltk\n","from nltk.tokenize import word_tokenize\n","from nltk import pos_tag\n","from nltk import PorterStemmer\n","from nltk.stem import WordNetLemmatizer\n","from nltk.corpus import wordnet\n","from nltk.corpus import stopwords\n","import re \n","\n","\n","warnings.filterwarnings('ignore')\n","\n","df = pd.read_csv('data_test.csv')\n","df.head(3)"]},{"cell_type":"markdown","source":["### 2. Basic Cleaning"],"metadata":{"id":"mxoIDw0KGEN3"}},{"cell_type":"code","source":["columns = ['name', 'category', 'sub_category', 'description', 'ingredient']\n","df = df.drop( [col for col in list(df.columns) if col not in columns], axis = 1)\n","\n","\n","def get_parsed_ingredient(i_list):\n","  try: return \" \".join(list(json.loads(i_list.replace(\"'\", '\"'))))\n","  except: return np.nan\n","\n","for i, row in df.iterrows():\n","    df.loc[i, 'ingredient'] = get_parsed_ingredient(row['ingredient'])\n","\n","df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"5R_6FwznGDV0","executionInfo":{"status":"ok","timestamp":1683758591676,"user_tz":240,"elapsed":325,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"46fdb047-0e3d-4231-8a1b-6a9f9f9d13aa"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 name sub_category  \\\n","0      Paneer Roastie      healthy   \n","1  Lauki Besan Cheela      healthy   \n","2      Paneer Paratha      healthy   \n","\n","                                          ingredient  \\\n","0  1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...   \n","1  1 Cup lauki (bottle gourd), grated 1 1/2 cup b...   \n","2  <b>For dough: </b> 2 cups Whole Wheat flour (a...   \n","\n","                                         description category  \n","0  https://food.ndtv.com/recipe-paneer-roastie-95...      NaN  \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...      NaN  \n","2  https://food.ndtv.com/recipe-paneer-paratha-95...      NaN  "],"text/html":["\n","  <div id=\"df-dcdc4f25-98df-4d0f-a7f0-70ad9eeeec83\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>sub_category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Paneer Roastie</td>\n","      <td>healthy</td>\n","      <td>1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lauki Besan Cheela</td>\n","      <td>healthy</td>\n","      <td>1 Cup lauki (bottle gourd), grated 1 1/2 cup b...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Paneer Paratha</td>\n","      <td>healthy</td>\n","      <td>&lt;b&gt;For dough: &lt;/b&gt; 2 cups Whole Wheat flour (a...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-paratha-95...</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dcdc4f25-98df-4d0f-a7f0-70ad9eeeec83')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dcdc4f25-98df-4d0f-a7f0-70ad9eeeec83 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dcdc4f25-98df-4d0f-a7f0-70ad9eeeec83');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["### 3. Adding a column `Veg/NonVeg`"],"metadata":{"id":"FcsZBrOCXtUF"}},{"cell_type":"code","source":["ingredients = ['chicken','wings','meat','salmon','salmons','cob','cobs','kebab','kebabs','fish','snake','gosht','bacon','mutton','lamb','egg','eggs']\n","nonveg_category = ['chicken','meat']\n","veg_nonveg_col = []\n","\n","for name, category, ingredient in zip(df.name, df.category, df.ingredient):\n","  if category in nonveg_category:\n","    veg_nonveg_col.append('non_veg')\n","  elif set(ingredients).intersection(set([n.lower() for n in name.split()])):\n","    veg_nonveg_col.append('non_veg')\n","  else:\n","    veg_nonveg_col.append('veg')\n","\n","df['veg_nonveg'] = veg_nonveg_col\n","df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"blJsJVYqXvpm","executionInfo":{"status":"ok","timestamp":1683758591679,"user_tz":240,"elapsed":17,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"92347054-0820-4087-8ada-7a117bb9ea56"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 name sub_category  \\\n","0      Paneer Roastie      healthy   \n","1  Lauki Besan Cheela      healthy   \n","2      Paneer Paratha      healthy   \n","\n","                                          ingredient  \\\n","0  1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...   \n","1  1 Cup lauki (bottle gourd), grated 1 1/2 cup b...   \n","2  <b>For dough: </b> 2 cups Whole Wheat flour (a...   \n","\n","                                         description category veg_nonveg  \n","0  https://food.ndtv.com/recipe-paneer-roastie-95...      NaN        veg  \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...      NaN        veg  \n","2  https://food.ndtv.com/recipe-paneer-paratha-95...      NaN        veg  "],"text/html":["\n","  <div id=\"df-a6cad09c-5bf2-4b80-b4d0-838b4c8834c4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>sub_category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>category</th>\n","      <th>veg_nonveg</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Paneer Roastie</td>\n","      <td>healthy</td>\n","      <td>1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lauki Besan Cheela</td>\n","      <td>healthy</td>\n","      <td>1 Cup lauki (bottle gourd), grated 1 1/2 cup b...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Paneer Paratha</td>\n","      <td>healthy</td>\n","      <td>&lt;b&gt;For dough: &lt;/b&gt; 2 cups Whole Wheat flour (a...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-paratha-95...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a6cad09c-5bf2-4b80-b4d0-838b4c8834c4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a6cad09c-5bf2-4b80-b4d0-838b4c8834c4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a6cad09c-5bf2-4b80-b4d0-838b4c8834c4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["print(df.veg_nonveg.value_counts())\n","sns.countplot(x=df.veg_nonveg)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"xbHb_GVmbJja","executionInfo":{"status":"ok","timestamp":1683758591839,"user_tz":240,"elapsed":175,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"21369e9f-bba6-48a0-d301-ba7c274ca447"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["veg        1214\n","non_veg     248\n","Name: veg_nonveg, dtype: int64\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='veg_nonveg', ylabel='count'>"]},"metadata":{},"execution_count":21},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### 4. Adding a column `review`"],"metadata":{"id":"kMAqg7zQd0A7"}},{"cell_type":"code","source":["review = []\n","for i in range(df.shape[0]):\n","  review.append(random.randint(1, 10))\n","df['review'] = review\n","df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"4agJy3ptd4sI","executionInfo":{"status":"ok","timestamp":1683758591840,"user_tz":240,"elapsed":12,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"774c82f3-36df-4eca-bced-5f525732294c"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 name sub_category  \\\n","0      Paneer Roastie      healthy   \n","1  Lauki Besan Cheela      healthy   \n","2      Paneer Paratha      healthy   \n","\n","                                          ingredient  \\\n","0  1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...   \n","1  1 Cup lauki (bottle gourd), grated 1 1/2 cup b...   \n","2  <b>For dough: </b> 2 cups Whole Wheat flour (a...   \n","\n","                                         description category veg_nonveg  \\\n","0  https://food.ndtv.com/recipe-paneer-roastie-95...      NaN        veg   \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...      NaN        veg   \n","2  https://food.ndtv.com/recipe-paneer-paratha-95...      NaN        veg   \n","\n","   review  \n","0       2  \n","1       1  \n","2       1  "],"text/html":["\n","  <div id=\"df-9a7636a8-87b3-45a6-b2f1-411dfbf0006e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>sub_category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>category</th>\n","      <th>veg_nonveg</th>\n","      <th>review</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Paneer Roastie</td>\n","      <td>healthy</td>\n","      <td>1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lauki Besan Cheela</td>\n","      <td>healthy</td>\n","      <td>1 Cup lauki (bottle gourd), grated 1 1/2 cup b...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Paneer Paratha</td>\n","      <td>healthy</td>\n","      <td>&lt;b&gt;For dough: &lt;/b&gt; 2 cups Whole Wheat flour (a...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-paratha-95...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a7636a8-87b3-45a6-b2f1-411dfbf0006e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9a7636a8-87b3-45a6-b2f1-411dfbf0006e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9a7636a8-87b3-45a6-b2f1-411dfbf0006e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["sns.countplot(x=df.review)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"t6uL9q7V4p6M","executionInfo":{"status":"ok","timestamp":1683758592126,"user_tz":240,"elapsed":296,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"47c5f5a9-74b3-47f9-86db-8b48b5cceb39"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='review', ylabel='count'>"]},"metadata":{},"execution_count":23},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### 5. Adding a column `nutrient`"],"metadata":{"id":"NuGOjbQHeXtW"}},{"cell_type":"code","source":["\n","class Nutrient:\n","\n","    def __init__(self, df):\n","        self.df = df\n","        pass\n","\n","    def iron(self):\n","        print(\"\\t- Fetching nutrient values of: iron\")\n","        url = 'https://www.redcrossblood.org/donate-blood/blood-donation-process/before-during-after/iron-blood-donation/iron-rich-foods.html'\n","        data = requests.get(url)\n","        soup = BeautifulSoup(data.content,'html.parser')\n","        li =  soup.select('div.rich-text-editor-content li')\n","        iron = [ele.text for ele in li]\n","        return ['red meat', 'poultry', 'eggs','egg', 'fruits', 'green' , 'fortified bread'] + iron\n","\n","    def calcium(self):\n","        print(\"\\t- Fetching nutrient values of: calcium\")\n","        url = 'https://www.medicalnewstoday.com/articles/322585.php#non-dairy-sources-of-calcium'\n","        data = requests.get(url)\n","        soup = BeautifulSoup(data.content,'html.parser')\n","        h3 = soup.select('div.css-0 h3')\n","        calcium = [ele.text.split('.')[1].strip() for ele in h3]\n","        return ['keer','yogurt', 'cheese', 'milk', 'salmon', 'leafy green','Cappuccino'] + calcium\n","\n","    def scrap_data_from_healthline(self, url, basic_ingridients):\n","        data = requests.get(url)\n","        soup = BeautifulSoup(data.content,'html.parser')\n","        h2 = soup.select('div.css-0 h2 div a')\n","        ingredients = []\n","        for ele in h2:\n","            ele = ele.text.split('.')\n","            if ele and len(ele) >= 2: ingredients.append(ele[1].strip())\n","        return basic_ingridients + ingredients\n","\n","    def sodium(self):\n","        print(\"\\t- Fetching nutrient values of: sodium\")\n","        return self.scrap_data_from_healthline(\n","            url = 'https://www.healthline.com/nutrition/foods-high-in-sodium#section1',\n","            basic_ingridients = ['salt', 'soy sauce', 'vegetables']\n","        )\n","\n","    def iodine(self):\n","        print(\"\\t- Fetching nutrient values of: iodine\")\n","        return self.scrap_data_from_healthline(\n","            url = 'https://www.healthline.com/nutrition/iodine-rich-foods#section1',\n","            basic_ingridients = [ 'salt', 'seafood']\n","        )\n","    \n","    def magnesium(self):\n","        print(\"\\t- Fetching nutrient values of: magnesium\")\n","        return self.scrap_data_from_healthline(\n","            url = 'https://www.healthline.com/nutrition/10-foods-high-in-magnesium#section11',\n","            basic_ingridients = ['chocolate','Spinach', 'broccoli', 'legumes', 'seeds']\n","        )\n","    \n","    def selenium(self):\n","        print(\"\\t- Fetching nutrient values of: selenium\")\n","        return self.scrap_data_from_healthline(\n","            url = 'https://www.healthline.com/health/selenium-foods#cashews',\n","            basic_ingridients =  ['banana','Organ meat', 'seafood', 'walnuts']\n","        )\n","    \n","    def protein(self):\n","        print(\"\\t- Fetching nutrient values of: protein\")\n","        protien = self.scrap_data_from_healthline(\n","            url = 'https://www.healthline.com/nutrition/20-delicious-high-protein-foods',\n","            basic_ingridients =  ['cookie','cookies','mutton','meat','gosht','Chicken','Wings','Meat','Salmon','Cob','Kebab','Fish','Snake','Gosht','Bacon','Mutton','Lamb']\n","        )\n","        data = requests.get('https://www.medicalnewstoday.com/articles/321522.php#high-protein-foods-for-weight-loss')\n","        soup = BeautifulSoup(data.content,'html.parser')\n","        li = soup.select('div.css-0 p strong')\n","        protien += [ele.text.split('.')[1].strip() for ele in li]\n","        return protien\n","\n","    def carbohydrates(self):\n","        print(\"\\t- Fetching nutrient values of: carbohydrates\")\n","        carbs = self.scrap_data_from_healthline(\n","            url = 'https://www.healthline.com/nutrition/12-healthy-high-carb-foods',\n","            basic_ingridients =  ['Poha','aloo','buttter','ghee','rice','biryani','pulao']\n","        )\n","        data = requests.get('https://www.medicalnewstoday.com/articles/323110.php#dried-fruits')\n","        soup = BeautifulSoup(data.content,'html.parser')\n","        li = soup.select('div.css-0 li')\n","        carbs += [ele.text for ele in li[:28]]\n","        data = requests.get('https://www.tuasaude.com/en/high-carb-foods/')\n","        soup = BeautifulSoup(data.content,'html.parser')\n","        td = soup.select('th p')\n","        carbs += [ele.text for ele in td if ele.text != 'Food'][1:]\n","        return carbs\n","\n","    def vitamin_c(self):\n","        print(\"\\t- Fetching nutrient values of: vitamin_c\")\n","        return ['margarita','Citrus fruit',' potatoes', 'broccoli', 'bell peppers', 'spinach','strawberries','tomatoes', 'Brussels sprouts']\n","    \n","    def vitamin_a(self):\n","        print(\"\\t- Fetching nutrient values of: vitamin_a\")\n","        return ['beef', 'liver', 'eggs','egg', 'shrimp', 'fish', 'fortified milk',' sweet potatoes', 'carrots', 'pumpkins', 'spinach',' mangoes']\n","\n","    def vitamin_d(self):\n","        print(\"\\t- Fetching nutrient values of: vitamin_d\")\n","        return ['milk' ,'cereals',' fatty','fish']\n","\n","    def vitamin_e(self):\n","        print(\"\\t- Fetching nutrient values of: vitamin_e\")\n","        return ['vegetables oils', 'leafy green', 'whole grains', 'nuts']\n","\n","    def vitamin_k(self):\n","        print(\"\\t- Fetching nutrient values of: vitamin_k\")\n","        return ['Cabbage', 'eggs','egg',' milk', 'spinach', 'broccoli',' kale']\n","    \n","    def chloride(self):\n","        print(\"\\t- Fetching nutrient values of: chloride\")\n","        return ['salt']\n","\n","    def potassium(self):\n","        print(\"\\t- Fetching nutrient values of: potassium\")\n","        return ['cake','meat', 'milk', 'fruits', 'vegetables', 'grains', 'legumes']\n","  \n","    def chromium(self):\n","        print(\"\\t- Fetching nutrient values of: chromium\")\n","        return ['meat', 'poultry', 'fish', 'nuts', 'cheese']\n","\n","    def copper(self):\n","        print(\"\\t- Fetching nutrient values of: copper\")\n","        return ['shellfish', 'nuts', 'seeds', 'beans',' prunes']\n","\n","    def fluoride(self):\n","        print(\"\\t- Fetching nutrient values of: fluoride\")\n","        return ['fish', 'teas']\n","    \n","    def manganese(self):\n","        print(\"\\t- Fetching nutrient values of: manganese\")\n","        return ['nuts', 'legumes', 'whole grains', 'tea','coffee','chai']\n","\n","    def zinc(self):\n","        print(\"\\t- Fetching nutrient values of: zinc\")\n","        return ['meat', 'shellfish', 'legumes', 'whole grains']\n","\n","    def fiber(self):\n","        print(\"\\t- Fetching nutrient values of: fiber\")\n","        return ['Salad','salad']\n","\n","    def phosphorus(self):\n","        print(\"\\t- Fetching nutrient values of: phosphorus\")\n","        return ['paneer','kebab']\n","\n","    def apply(self):\n","        print(\"Populating Nutrient Attribute\")\n","        nutrition_map = {\n","            'iron': self.iron(),\n","            'calcium': self.calcium(),\n","            'sodium': self.sodium(),\n","            'iodine': self.iodine(),\n","            'magnesium': self.magnesium(),\n","            'selenium': self.selenium(),\n","            'protein': self.protein(),\n","            'carbohydrates': self.carbohydrates(),\n","            'vitamin_c': self.vitamin_c(),\n","            'vitamin_a': self.vitamin_a(),\n","            'vitamin_d': self.vitamin_d(),\n","            'vitamin_e': self.vitamin_e(),\n","            'vitamin_k': self.vitamin_k(),\n","            'chloride': self.chloride(),\n","            'potassium': self.potassium(),\n","            'chromium': self.chromium(),\n","            'copper': self.copper(),\n","            'fluoride': self.fluoride(),\n","            'manganese': self.manganese(),\n","            'zinc': self.zinc(),\n","            'fiber': self.fiber(),\n","            'phosphorus': self.phosphorus(),\n","        }\n","        nutrient_col = []\n","        ingredient_list = []\n","        for name, ingredient in zip(df.name, df.ingredient):\n","            if ingredient is np.nan: ingredient = \"\"\n","            i_list = []\n","            i_list += [i.lower() for i in ingredient.split()]\n","            i_list += [n.strip().lower() for n in name.split()]\n","            ingredient_list.append(i_list)\n","        \n","        for ingredient in ingredient_list:\n","            nutrient_list = []\n","            for n_name, n_list in nutrition_map.items():\n","                if set(ingredient).intersection(n_list):\n","                    nutrient_list.append(n_name)\n","            nutrient_col.append(\" \".join(nutrient_list) if len(nutrient_list) > 0 else np.nan)\n","        self.df['nutrient'] = nutrient_col\n","\n","df_nutrient = Nutrient(df)\n","df_nutrient.apply()\n","\n","missing_count = df['nutrient'].isnull().sum()\n","print(\"Missing Values: \", missing_count)"],"metadata":{"id":"19iSEvD3eahP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1683758599343,"user_tz":240,"elapsed":7224,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"a5bc4608-e570-4e3f-c890-2fbd11220a3f"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Populating Nutrient Attribute\n","\t- Fetching nutrient values of: iron\n","\t- Fetching nutrient values of: calcium\n","\t- Fetching nutrient values of: sodium\n","\t- Fetching nutrient values of: iodine\n","\t- Fetching nutrient values of: magnesium\n","\t- Fetching nutrient values of: selenium\n","\t- Fetching nutrient values of: protein\n","\t- Fetching nutrient values of: carbohydrates\n","\t- Fetching nutrient values of: vitamin_c\n","\t- Fetching nutrient values of: vitamin_a\n","\t- Fetching nutrient values of: vitamin_d\n","\t- Fetching nutrient values of: vitamin_e\n","\t- Fetching nutrient values of: vitamin_k\n","\t- Fetching nutrient values of: chloride\n","\t- Fetching nutrient values of: potassium\n","\t- Fetching nutrient values of: chromium\n","\t- Fetching nutrient values of: copper\n","\t- Fetching nutrient values of: fluoride\n","\t- Fetching nutrient values of: manganese\n","\t- Fetching nutrient values of: zinc\n","\t- Fetching nutrient values of: fiber\n","\t- Fetching nutrient values of: phosphorus\n","Missing Values:  485\n"]}]},{"cell_type":"code","source":["df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"SYcMW9B40pWK","executionInfo":{"status":"ok","timestamp":1683758599344,"user_tz":240,"elapsed":27,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"265bcb00-d10a-47b1-fbae-e120611caad1"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 name sub_category  \\\n","0      Paneer Roastie      healthy   \n","1  Lauki Besan Cheela      healthy   \n","2      Paneer Paratha      healthy   \n","\n","                                          ingredient  \\\n","0  1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...   \n","1  1 Cup lauki (bottle gourd), grated 1 1/2 cup b...   \n","2  <b>For dough: </b> 2 cups Whole Wheat flour (a...   \n","\n","                                         description category veg_nonveg  \\\n","0  https://food.ndtv.com/recipe-paneer-roastie-95...      NaN        veg   \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...      NaN        veg   \n","2  https://food.ndtv.com/recipe-paneer-paratha-95...      NaN        veg   \n","\n","   review                                           nutrient  \n","0       2  iron sodium iodine magnesium chloride copper p...  \n","1       1                        iron sodium iodine chloride  \n","2       1  iron sodium iodine carbohydrates chloride phos...  "],"text/html":["\n","  <div id=\"df-de439e7b-f8d8-45ae-baf1-9693c5b272b6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>sub_category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>category</th>\n","      <th>veg_nonveg</th>\n","      <th>review</th>\n","      <th>nutrient</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Paneer Roastie</td>\n","      <td>healthy</td>\n","      <td>1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","      <td>2</td>\n","      <td>iron sodium iodine magnesium chloride copper p...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lauki Besan Cheela</td>\n","      <td>healthy</td>\n","      <td>1 Cup lauki (bottle gourd), grated 1 1/2 cup b...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine chloride</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Paneer Paratha</td>\n","      <td>healthy</td>\n","      <td>&lt;b&gt;For dough: &lt;/b&gt; 2 cups Whole Wheat flour (a...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-paratha-95...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine carbohydrates chloride phos...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de439e7b-f8d8-45ae-baf1-9693c5b272b6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-de439e7b-f8d8-45ae-baf1-9693c5b272b6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-de439e7b-f8d8-45ae-baf1-9693c5b272b6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["n_map = {}\n","for n_list in df['nutrient']:\n","  if n_list is np.nan: continue\n","  for n in n_list.split():\n","    if n not in n_map:\n","      n_map[n] = 1\n","    else:\n","      n_map[n] += 1\n","      \n","plt.xticks(rotation=90)\n","plt.bar(range(len(n_map)), list(n_map.values()), tick_label=list(n_map.keys()))\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"F4gzIQYtSgFe","executionInfo":{"status":"ok","timestamp":1683758599774,"user_tz":240,"elapsed":454,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"c76f1142-9b32-4239-ca33-c3f191af2973"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### 6. Adding a column `disease`"],"metadata":{"id":"VhoOISaiQL17"}},{"cell_type":"code","source":["class Disease:\n","\n","    def __init__(self,df):\n","        self.df = df\n","        name_list = []\n","        nutrient_list = []\n","        for index, row in df.iterrows():\n","            if row['nutrient'] is not np.nan and row['name'] is not np.nan:\n","                name_list += [str(n).lower() for n in str(row['name']).split()]\n","                nutrient_list += [str(n).lower() for n in str(row['nutrient']).split()]\n","        \n","        self.name_list = set(name_list)\n","        self.nutrient_list = set(nutrient_list)\n","        self.stop_words = set(list(open('stopwords.txt','r').read().split()))\n","\n","\n","    def remove_stop_words(self, tokens):\n","        return [token for token in tokens if token not in self.stop_words]\n","\n","    def process_extract_words(self, words, avoid_list=[]):\n","        word_list = []\n","        for word in words:\n","            word = word.lower()\n","            if word in self.name_list or word in self.nutrient_list:\n","                word_list.append(word)\n","\n","        word_list = [word for word in word_list if word not in avoid_list] \n","        return self.remove_stop_words(list(set(word_list)))\n","\n","    def extract(self, diet_name, url, child_number=-1, avoid_list=[], sub_child_number=-1):\n","        print(\"\\t - Fetching disease values of:\", diet_name)\n","        data = requests.get(url)\n","        soup = BeautifulSoup(data.content,'html.parser')\n","        data = soup.find('article', class_='article-body')\n","        data = data if child_number == -1 else data.contents[child_number]\n","        data = data if sub_child_number == -1 else data.contents[sub_child_number]\n","        data = data.text.split()\n","        return [word.lower() for word in self.process_extract_words(data, avoid_list)]\n","\n","    def apply(self):\n","        print(\"Populating Disease Attribute\")\n","        meat_word_list = ['chicken','wings','meat','salmon','salmons','cob','cobs','kebab','kebabs','fish','snake','gosht','bacon','mutton','lamb','egg','eggs', 'beef', 'milk', 'pepperoni']\n","        diets = {\n","            'heart_disease': self.extract('heart_disease', 'https://www.healthline.com/nutrition/heart-healthy-foods'),\n","            'hypertension': self.extract('hypertension', 'https://www.healthline.com/health/foods-good-for-high-blood-pressure'),\n","            'obesity': self.extract('obesity', 'https://www.healthline.com/nutrition/20-most-weight-loss-friendly-foods'),\n","            'diabeties': self.extract('diabeties', 'https://www.healthline.com/nutrition/16-best-foods-for-diabetics'),\n","            'kidney_disease': self.extract('kidney_disease', 'https://www.healthline.com/nutrition/best-foods-for-kidneys#4'),\n","            'pregnancy': self.extract('pregnancy', 'https://www.healthline.com/nutrition/13-foods-to-eat-when-pregnant'),\n","            'rickets': self.extract('rickets', 'https://www.healthline.com/nutrition/9-foods-high-in-vitamin-d#1'),\n","            'scurvy': self.extract('scurvy', 'https://www.healthline.com/nutrition/vitamin-c-foods'),\n","            'anemia': self.extract('anemia', 'https://www.healthline.com/health/best-diet-plan-for-anemia'),\n","            'goitre': self.extract('goitre', 'https://www.healthline.com/nutrition/hypothyroidism-diet', child_number=3),\n","            'eye_disease': self.extract('eye_disease', 'https://www.healthline.com/nutrition/foods-high-in-vitamin-a')\n","        }\n","\n","        disease_col = []\n","        for i, row in df.iterrows():\n","            curr_disease_col = []\n","            name_list = []\n","            nutrient_list = []\n","            if row['name'] is not np.nan:\n","                name_list = [name.lower() for name in row['name'].split()]\n","            if row['nutrient'] is not np.nan:\n","                nutrient_list = [nutrient.lower() for nutrient in row['nutrient'].split()]\n","\n","            for disease_name, disease_values in diets.items():\n","                for value in disease_values:\n","                    if value in name_list or value in nutrient_list:\n","                        curr_disease_col.append(disease_name)\n","            curr_disease_col = list(set(curr_disease_col))\n","            curr_disease_col = np.nan if curr_disease_col == [] else \" \".join(curr_disease_col)\n","            # if curr_disease_col == []:\n","            #     curr_disease_col = np.nan\n","            # else:\n","            #   curr_disease_col = \" \".join(curr_disease_col)\n","            disease_col.append(curr_disease_col)\n","\n","        self.df['disease'] = disease_col\n"],"metadata":{"id":"I-4A3OSPQO9o","executionInfo":{"status":"ok","timestamp":1683758599775,"user_tz":240,"elapsed":7,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["df_disease = Disease(df)\n","df_disease.apply()\n","\n","missing_count = df['disease'].isnull().sum()\n","print('Disease Missing Values:', missing_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cQHnaq8SQaOo","executionInfo":{"status":"ok","timestamp":1683758606230,"user_tz":240,"elapsed":6460,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"df3ce5fa-8074-477e-bffe-09d77f5c6292"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["Populating Disease Attribute\n","\t - Fetching disease values of: heart_disease\n","\t - Fetching disease values of: hypertension\n","\t - Fetching disease values of: obesity\n","\t - Fetching disease values of: diabeties\n","\t - Fetching disease values of: kidney_disease\n","\t - Fetching disease values of: pregnancy\n","\t - Fetching disease values of: rickets\n","\t - Fetching disease values of: scurvy\n","\t - Fetching disease values of: anemia\n","\t - Fetching disease values of: goitre\n","\t - Fetching disease values of: eye_disease\n","Disease Missing Values: 472\n"]}]},{"cell_type":"code","source":["df.head(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":191},"id":"EGt3nE0SQ37C","executionInfo":{"status":"ok","timestamp":1683758606230,"user_tz":240,"elapsed":27,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"8989242a-8b20-4cbc-9519-332ca76b0f18"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 name sub_category  \\\n","0      Paneer Roastie      healthy   \n","1  Lauki Besan Cheela      healthy   \n","\n","                                          ingredient  \\\n","0  1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...   \n","1  1 Cup lauki (bottle gourd), grated 1 1/2 cup b...   \n","\n","                                         description category veg_nonveg  \\\n","0  https://food.ndtv.com/recipe-paneer-roastie-95...      NaN        veg   \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...      NaN        veg   \n","\n","   review                                           nutrient  \\\n","0       2  iron sodium iodine magnesium chloride copper p...   \n","1       1                        iron sodium iodine chloride   \n","\n","                                             disease  \n","0  hypertension diabeties kidney_disease anemia o...  \n","1  kidney_disease anemia obesity goitre heart_dis...  "],"text/html":["\n","  <div id=\"df-e66706cb-40da-4ccc-8230-8a29947b1dc4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>sub_category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>category</th>\n","      <th>veg_nonveg</th>\n","      <th>review</th>\n","      <th>nutrient</th>\n","      <th>disease</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Paneer Roastie</td>\n","      <td>healthy</td>\n","      <td>1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","      <td>2</td>\n","      <td>iron sodium iodine magnesium chloride copper p...</td>\n","      <td>hypertension diabeties kidney_disease anemia o...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lauki Besan Cheela</td>\n","      <td>healthy</td>\n","      <td>1 Cup lauki (bottle gourd), grated 1 1/2 cup b...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine chloride</td>\n","      <td>kidney_disease anemia obesity goitre heart_dis...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e66706cb-40da-4ccc-8230-8a29947b1dc4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e66706cb-40da-4ccc-8230-8a29947b1dc4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e66706cb-40da-4ccc-8230-8a29947b1dc4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["### 7. Adding a column `diet`"],"metadata":{"id":"LUFpAO2fQxx_"}},{"cell_type":"code","source":["class Diet:\n","    def __init__(self,df):\n","        self.df = df\n","        name_list = []\n","        nutrient_list = []\n","        for index, row in df.iterrows():\n","            if row['nutrient'] is not np.nan and row['name'] is not np.nan:\n","                name_list += [str(n).lower() for n in str(row['name']).split()]\n","                nutrient_list += [str(n).lower() for n in str(row['nutrient']).split()]\n","        \n","        self.name_list = set(name_list)\n","        self.nutrient_list = set(nutrient_list)\n","        self.stop_words = set(list(open('stopwords.txt','r').read().split()))\n","\n","    \n","    def remove_stop_words(self, tokens):\n","        return [token for token in tokens if token not in self.stop_words]\n","\n","    def process_extract_words(self, words, avoid_list=[]):\n","        word_list = []\n","        for word in words:\n","            word = word.lower()\n","            if word in self.name_list or word in self.nutrient_list:\n","                word_list.append(word)\n","\n","        word_list = [word for word in word_list if word not in avoid_list] \n","        return self.remove_stop_words(list(set(word_list)))\n","\n","    def extract(self, diet_name, url, child_number=-1, avoid_list=[], sub_child_number=-1):\n","        print(\"\\t - Fetching diet values of:\", diet_name)\n","        data = requests.get(url)\n","        soup = BeautifulSoup(data.content,'html.parser')\n","        data = soup.find('article', class_='article-body')\n","        data = data if child_number == -1 else data.contents[child_number]\n","        data = data if sub_child_number == -1 else data.contents[sub_child_number]\n","        data = data.text.split()\n","        return [word.lower() for word in self.process_extract_words(data, avoid_list)]\n","\n","    def apply(self):\n","        print(\"Populating Diet Attribute\")\n","        meat_word_list = ['chicken','wings','meat','salmon','salmons','cob','cobs','kebab','kebabs','fish','snake','gosht','bacon','mutton','lamb','egg','eggs', 'beef', 'milk', 'pepperoni']\n","        diets = {\n","            'vegan_diet': self.extract('vegan_diet', 'https://www.healthline.com/nutrition/foods-vegans-eat', avoid_list=meat_word_list),\n","            'high_protien_diet': self.extract('high_protien_diet', 'https://www.healthline.com/nutrition/high-protein-foods'),\n","            'type_a_diet': self.extract('type_a_diet', 'https://www.healthline.com/health/a-positive-blood-type-diet', child_number=4),\n","            'type_o_diet': self.extract('type_o_diet', 'https://www.healthline.com/health/O-positive-blood-type-diet', child_number=3),\n","            'paleo_diet': self.extract('paleo_diet', 'https://www.healthline.com/nutrition/paleo-diet-meal-plan-and-menu', child_number=3),\n","            'omni_diet': self.extract('omni_diet', 'https://www.healthline.com/nutrition/omni-diet-review', child_number=3, sub_child_number=4),\n","            'low_sodium_diet': self.extract('low_sodium_diet', 'https://www.healthline.com/nutrition/low-sodium-diet', child_number=5),\n","            'low_fat_diet': self.extract('low_fat_diet', 'https://www.healthline.com/nutrition/healthy-low-fat-foods'),\n","            'gluten_free_diet': self.extract('gluten_free_diet', 'https://www.healthline.com/nutrition/gluten-free-diet', child_number=4),\n","            'high_fiber_diet': self.extract('high_fiber_diet', 'https://www.healthline.com/nutrition/22-high-fiber-foods'),\n","            'hormone_diet': self.extract('hormone_diet', 'https://www.healthline.com/health/hormone-diet'),\n","            'mediterranean_diet': self.extract('mediterranean_diet', 'https://www.healthline.com/nutrition/mediterranean-diet-meal-plan', child_number=4),\n","            'low_carb_diet': self.extract('low_carb_diet', 'https://www.healthline.com/nutrition/low-carb-diet-meal-plan-and-menu', child_number=2),\n","            'ketogenic_diet': self.extract('ketogenic_diet', 'https://www.healthline.com/nutrition/ketogenic-diet-foods'),\n","            'dash_diet': self.extract('dash_diet', 'https://www.healthline.com/nutrition/dash-diet', child_number=5),\n","        }\n","\n","        diet_col = []\n","        for i, row in df.iterrows():\n","            curr_diet_col = []\n","            name_list = []\n","            nutrient_list = []\n","            if row['name'] is not np.nan:\n","                name_list = [name.lower() for name in row['name'].split()]\n","            if row['nutrient'] is not np.nan:\n","                nutrient_list = [nutrient.lower() for nutrient in row['nutrient'].split()]\n","\n","            for diet_name, diet_values in diets.items():\n","                for value in diet_values:\n","                    if value in name_list or value in nutrient_list:\n","                        curr_diet_col.append(diet_name)\n","            curr_diet_col = list(set(curr_diet_col))\n","            curr_diet_col = np.nan if curr_diet_col == [] else \" \".join(curr_diet_col)\n","            # if curr_diet_col == []:\n","            #     curr_diet_col = np.nan\n","            diet_col.append(curr_diet_col)\n","\n","        self.df['diet'] = diet_col"],"metadata":{"id":"tcovivljRJSy","executionInfo":{"status":"ok","timestamp":1683758606231,"user_tz":240,"elapsed":24,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["df_diet = Diet(df)\n","df_diet.apply()\n","\n","missing_count = df['diet'].isnull().sum()\n","print('Missing Values:', missing_count)\n","print('Total Values:', len(df))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QgQFrW23RNA2","executionInfo":{"status":"ok","timestamp":1683758615431,"user_tz":240,"elapsed":9224,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"72d692f5-561f-4b06-ea7c-0101b938d064"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Populating Diet Attribute\n","\t - Fetching diet values of: vegan_diet\n","\t - Fetching diet values of: high_protien_diet\n","\t - Fetching diet values of: type_a_diet\n","\t - Fetching diet values of: type_o_diet\n","\t - Fetching diet values of: paleo_diet\n","\t - Fetching diet values of: omni_diet\n","\t - Fetching diet values of: low_sodium_diet\n","\t - Fetching diet values of: low_fat_diet\n","\t - Fetching diet values of: gluten_free_diet\n","\t - Fetching diet values of: high_fiber_diet\n","\t - Fetching diet values of: hormone_diet\n","\t - Fetching diet values of: mediterranean_diet\n","\t - Fetching diet values of: low_carb_diet\n","\t - Fetching diet values of: ketogenic_diet\n","\t - Fetching diet values of: dash_diet\n","Missing Values: 482\n","Total Values: 1462\n"]}]},{"cell_type":"code","source":["df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"8mdHXVY_RUHZ","executionInfo":{"status":"ok","timestamp":1683758615432,"user_tz":240,"elapsed":35,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"1e0ce44f-ac6d-47dd-c538-3f167eff28d7"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 name sub_category  \\\n","0      Paneer Roastie      healthy   \n","1  Lauki Besan Cheela      healthy   \n","2      Paneer Paratha      healthy   \n","\n","                                          ingredient  \\\n","0  1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...   \n","1  1 Cup lauki (bottle gourd), grated 1 1/2 cup b...   \n","2  <b>For dough: </b> 2 cups Whole Wheat flour (a...   \n","\n","                                         description category veg_nonveg  \\\n","0  https://food.ndtv.com/recipe-paneer-roastie-95...      NaN        veg   \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...      NaN        veg   \n","2  https://food.ndtv.com/recipe-paneer-paratha-95...      NaN        veg   \n","\n","   review                                           nutrient  \\\n","0       2  iron sodium iodine magnesium chloride copper p...   \n","1       1                        iron sodium iodine chloride   \n","2       1  iron sodium iodine carbohydrates chloride phos...   \n","\n","                                             disease  \\\n","0  hypertension diabeties kidney_disease anemia o...   \n","1  kidney_disease anemia obesity goitre heart_dis...   \n","2  diabeties kidney_disease anemia obesity goitre...   \n","\n","                                                diet  \n","0  vegan_diet high_protien_diet low_sodium_diet l...  \n","1  vegan_diet high_protien_diet low_sodium_diet l...  \n","2  vegan_diet high_protien_diet low_sodium_diet l...  "],"text/html":["\n","  <div id=\"df-bad6a7e6-95b8-4c7f-8ed7-9a45ec8cf26a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>sub_category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>category</th>\n","      <th>veg_nonveg</th>\n","      <th>review</th>\n","      <th>nutrient</th>\n","      <th>disease</th>\n","      <th>diet</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Paneer Roastie</td>\n","      <td>healthy</td>\n","      <td>1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","      <td>2</td>\n","      <td>iron sodium iodine magnesium chloride copper p...</td>\n","      <td>hypertension diabeties kidney_disease anemia o...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lauki Besan Cheela</td>\n","      <td>healthy</td>\n","      <td>1 Cup lauki (bottle gourd), grated 1 1/2 cup b...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine chloride</td>\n","      <td>kidney_disease anemia obesity goitre heart_dis...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Paneer Paratha</td>\n","      <td>healthy</td>\n","      <td>&lt;b&gt;For dough: &lt;/b&gt; 2 cups Whole Wheat flour (a...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-paratha-95...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine carbohydrates chloride phos...</td>\n","      <td>diabeties kidney_disease anemia obesity goitre...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bad6a7e6-95b8-4c7f-8ed7-9a45ec8cf26a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bad6a7e6-95b8-4c7f-8ed7-9a45ec8cf26a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bad6a7e6-95b8-4c7f-8ed7-9a45ec8cf26a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["### 8. Adding a column `price`"],"metadata":{"id":"G8DRhvAjRYYz"}},{"cell_type":"code","source":["print(\"Adding Price Column\")\n","price_col = []\n","for i in range(df.shape[0]):\n","    price_col.append(random.randrange(200, 700, 5))\n","df['price'] = price_col\n","df.head(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"C1buYbPIRe9c","executionInfo":{"status":"ok","timestamp":1683758615433,"user_tz":240,"elapsed":32,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"16bca230-6b6d-4098-cc8c-50e37a59540b"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Adding Price Column\n"]},{"output_type":"execute_result","data":{"text/plain":["                 name sub_category  \\\n","0      Paneer Roastie      healthy   \n","1  Lauki Besan Cheela      healthy   \n","\n","                                          ingredient  \\\n","0  1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...   \n","1  1 Cup lauki (bottle gourd), grated 1 1/2 cup b...   \n","\n","                                         description category veg_nonveg  \\\n","0  https://food.ndtv.com/recipe-paneer-roastie-95...      NaN        veg   \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...      NaN        veg   \n","\n","   review                                           nutrient  \\\n","0       2  iron sodium iodine magnesium chloride copper p...   \n","1       1                        iron sodium iodine chloride   \n","\n","                                             disease  \\\n","0  hypertension diabeties kidney_disease anemia o...   \n","1  kidney_disease anemia obesity goitre heart_dis...   \n","\n","                                                diet  price  \n","0  vegan_diet high_protien_diet low_sodium_diet l...    625  \n","1  vegan_diet high_protien_diet low_sodium_diet l...    595  "],"text/html":["\n","  <div id=\"df-bdcd0050-34a8-4164-a4b1-ec1bb0fe841b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>sub_category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>category</th>\n","      <th>veg_nonveg</th>\n","      <th>review</th>\n","      <th>nutrient</th>\n","      <th>disease</th>\n","      <th>diet</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Paneer Roastie</td>\n","      <td>healthy</td>\n","      <td>1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","      <td>2</td>\n","      <td>iron sodium iodine magnesium chloride copper p...</td>\n","      <td>hypertension diabeties kidney_disease anemia o...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>625</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lauki Besan Cheela</td>\n","      <td>healthy</td>\n","      <td>1 Cup lauki (bottle gourd), grated 1 1/2 cup b...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>NaN</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine chloride</td>\n","      <td>kidney_disease anemia obesity goitre heart_dis...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>595</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bdcd0050-34a8-4164-a4b1-ec1bb0fe841b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bdcd0050-34a8-4164-a4b1-ec1bb0fe841b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bdcd0050-34a8-4164-a4b1-ec1bb0fe841b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["sns.distplot(df.price)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"qkhMItGSRtvV","executionInfo":{"status":"ok","timestamp":1683758615860,"user_tz":240,"elapsed":456,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"e74b88a9-bceb-4067-986b-1b6c774d17c1"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='price', ylabel='Density'>"]},"metadata":{},"execution_count":34},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### 9. Data Cleaning\n"],"metadata":{"id":"ZK31L_nIR0Gu"}},{"cell_type":"markdown","source":["#### Noise, Duplicates Removal, Filling Missing Values "],"metadata":{"id":"N4FI6YZ7dEnv"}},{"cell_type":"code","source":["def check_null(x):\n","  if isinstance(x, list): return len(x) == 0\n","  if isinstance(x, str): return x == \"\"\n","  return x is np.nan\n","\n","def wrapper(x):\n","  flag = check_null(x)\n","  if flag:\n","    print(\"Error due to:\", x)\n","  return flag\n","\n","def getMissingDataStats():\n","  missing_df = df.applymap(check_null)\n","  missing_values = missing_df.sum().sort_values(ascending=False)\n","  perc_missing = (missing_df.sum()/missing_df.count()).sort_values(ascending=False)\n","  missing_data = pd.concat([missing_values, perc_missing],axis=1,keys=['Total Missing','Percent'])\n","  return missing_data\n","\n","getMissingDataStats()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"XUDo5newSBBa","executionInfo":{"status":"ok","timestamp":1683758615860,"user_tz":240,"elapsed":14,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"73e4b8ca-69ba-4d94-a764-4ad22273e480"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Total Missing   Percent\n","category               1102  0.753762\n","nutrient                485  0.331737\n","diet                    482  0.329685\n","disease                 472  0.322845\n","sub_category            360  0.246238\n","ingredient               12  0.008208\n","name                      0  0.000000\n","description               0  0.000000\n","veg_nonveg                0  0.000000\n","review                    0  0.000000\n","price                     0  0.000000"],"text/html":["\n","  <div id=\"df-7a24abb7-dbdd-4869-ae26-b7e723f49472\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Total Missing</th>\n","      <th>Percent</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>category</th>\n","      <td>1102</td>\n","      <td>0.753762</td>\n","    </tr>\n","    <tr>\n","      <th>nutrient</th>\n","      <td>485</td>\n","      <td>0.331737</td>\n","    </tr>\n","    <tr>\n","      <th>diet</th>\n","      <td>482</td>\n","      <td>0.329685</td>\n","    </tr>\n","    <tr>\n","      <th>disease</th>\n","      <td>472</td>\n","      <td>0.322845</td>\n","    </tr>\n","    <tr>\n","      <th>sub_category</th>\n","      <td>360</td>\n","      <td>0.246238</td>\n","    </tr>\n","    <tr>\n","      <th>ingredient</th>\n","      <td>12</td>\n","      <td>0.008208</td>\n","    </tr>\n","    <tr>\n","      <th>name</th>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>description</th>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>veg_nonveg</th>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>review</th>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a24abb7-dbdd-4869-ae26-b7e723f49472')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7a24abb7-dbdd-4869-ae26-b7e723f49472 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7a24abb7-dbdd-4869-ae26-b7e723f49472');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["#### Processing column `nutrient`"],"metadata":{"id":"coG6AQ8GSIBN"}},{"cell_type":"code","source":["def fill_default_nutrient(category_level, category_value, default_nutrient):\n","  count = 0\n","  for i in range(df.shape[0]):\n","    if df.loc[i,category_level]==category_value and df.loc[i,'nutrient'] is np.nan:\n","      df.loc[i,'nutrient'] = \" \".join(default_nutrient)\n","      count += 1\n","\n","fill_default_nutrient('category', ' ', ['protein'])\n","fill_default_nutrient('category', 'rice', ['carbohydrates'])\n","fill_default_nutrient('category', 'chicken', ['protein'])\n","fill_default_nutrient('sub_category', 'seafood', ['vitamin_a'])\n","fill_default_nutrient('category', 'bread', ['protien'])\n","fill_default_nutrient('sub_category', 'vegetarian', ['calcium'])\n","fill_default_nutrient('sub_category', 'navratri', ['fiber'])\n","fill_default_nutrient('sub_category', 'diwali', ['carbohydrate'])\n","fill_default_nutrient('sub_category', 'holi', ['carbohydrate'])\n","fill_default_nutrient('sub_category', 'breakfast', ['iron'])\n","fill_default_nutrient('sub_category', 'healthy', ['fiber'])\n","fill_default_nutrient('sub_category', 'kids', ['calcium'])\n","fill_default_nutrient('sub_category', 'eid', ['protein'])\n","fill_default_nutrient('sub_category', 'christmas', ['carbohydrates'])\n","fill_default_nutrient('sub_category', 'dinner', ['carbohydrates'])\n","fill_default_nutrient('sub_category', 'desserts', ['sugar'])\n","fill_default_nutrient('category', 'snacks', ['protein'])\n","fill_default_nutrient('category', 'easter', ['protein'])\n","fill_default_nutrient('sub_category', 'durga-puja', ['carbohydrates'])\n"],"metadata":{"id":"c13BtyP_SRDk","executionInfo":{"status":"ok","timestamp":1683758616158,"user_tz":240,"elapsed":309,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}}},"execution_count":36,"outputs":[]},{"cell_type":"markdown","source":["#### Processing column `category` "],"metadata":{"id":"flssZFiOdL7B"}},{"cell_type":"code","source":["def fill_default_category(category_name, category_list):\n","    count = 0\n","    for i in range(df.shape[0]):\n","        for name in [name.lower() for name in df.loc[i,'name'].split()]:\n","            if name in [c.lower() for c in category_list]:\n","                df.loc[i,'category'] = category_name\n","                count += 1\n","    # print(f\"Added {str(count):<3s} category value for {category_name}\")\n","\n","category_map = {\n","    'cookie': ['cookie','cookies'],\n","    'paneer': ['paneer'],\n","    'salad': ['salad'],\n","    'thandai': ['thandai'],\n","    'milk': ['milk'],\n","    'soup': ['soup'],\n","    'margarita': ['margarita'],\n","    'tea': ['tea','chai'],\n","    'coffee': ['ESPRESSO','CAPPUCCINO','CAFÉ LATTE','MACCHIATO','AMERICANO','DECAFFEINATED','Coffee','CAFÉ LATTE'],\n","    'wine': ['wine'],\n","    'cake': ['cake']\n","}\n","\n","for category_name, category_list in category_map.items():\n","    fill_default_category(category_name, category_list)\n","\n","default_category = ['chicken', 'almond', 'chocolate', 'kheer', 'cake', 'curry', 'rice', 'biryani', 'halwa', 'fish', 'aloo', 'mutton', 'cookies', 'baked', 'kebab', 'christmas', 'ladoo', 'badam', 'strawberry', 'apple', 'salad', 'tikka', 'lamb', 'soup', 'banana', 'vada', 'bread', 'sauce', 'kaju', 'paneer', 'prawn', 'barfi', 'mango', 'thandai', 'coconut', 'dahi', 'pizza', 'modak', 'rasmalai', 'dal', 'malai', 'gosht', 'kofta', 'gujiya', 'pasta', 'pulao', 'methi',  'poha', 'butter', 'dosa', 'carrot', 'chaat','kebabs', 'kulfi', 'gajar', 'korma', 'pista', 'gulab', 'khichdi', 'palak', 'roti', 'roast', 'tikki','cheese', 'matar', 'smoothie', 'cranberry', 'sabudana', 'rabdi', 'berry', 'coffee','paratha', 'walnut', 'spicy', 'potato', 'beetroot', 'anjeer', 'samosa', 'kachori', 'gulkand', 'risotto', 'margarita','honey', 'corn', 'nuts', 'roasted',  'spinach', 'sev','cardamom', 'dome', 'sangria','chawal', 'arbi', 'mushroom', 'tea', 'egg', 'pie', 'parantha', 'kulcha', 'khaja', 'rabri', 'jalebi', 'bhaji','chilli', 'tricolour', 'chikki', 'zucchini', 'gluten-free', 'barley', 'raspberry', 'chakli', 'dip', 'shankarpali', 'dessert', 'cashew', 'tomato', 'soya', 'stuffed', 'chana', 'steam', 'bao', 'peda', 'tiranga', 'pav', 'idli', 'seed', 'saffron', 'love', 'chutney', 'cocktail', 'mint', 'garlic', 'turkey', 'microwave', 'wrapped', 'keema', 'shami', 'ghevar', 'pancakes', 'pudding', 'papad', 'broccoli',  'shorba', 'gluten', 'scotch', 'lentil', 'kahwa', 'kiwi', 'oats', 'wings', 'momos', 'gajak','salmon', 'appam', 'basil', 'pithe', 'warm', 'kinnu', 'punch', 'spanish', 'milk', 'fresh', 'cappuccino', 'plum','tawa', 'kadai', 'kofte', 'malabari', 'coriander','pistachio', 'kalakand', '(vrat)', 'upma', 'dundee', 'gehun', 'sushi', 'khoya','panacotta', 'eggless', 'easter', 'kashmiri', 'khus', 'besan', 'sohan', 'panjiri', 'malpua', 'payesh', 'imarti', 'atte', 'petha', 'omelette','laddu', 'chhena', 'almonds', 'chargrilled', 'bell', 'glazed', 'watermelon', 'polenta', 'recipe', 'som', 'tam', 'tangy', 'amaranth', 'moong', 'missi',  'quesadilla', 'dragon', 'fire', 'argentino', 'belgian', 'chop', 'moonglet', 'lasooni',  'pakori', 'zaitooni', 'croquettes','gujiyas', 'hariyali', 'apricot', 'gokul', 'shower', 'devils', 'onion', 'gur', 'maple', 'ice', 'desi', 'gobhi', 'mastani', 'drink', 'hot', 'mocha', 'whisky', 'bourbon', 'irish', 'boondi','amritsari', 'cauliflower', 'rum', 'fritters', 'seared', 'crab', 'cajun', 'bacon', 'mongolian',  'rava', 'pineapple', 'bruschetta', 'breton', 'luchi', 'parotta', 'poppy', 'brownie', 'macaroons', 'crunch','turkish','vanilla', 'cinnamon', 'cookie', 'indian', 'bedmi', 'raseele', 'suji', 'zaffrani', 'nariyal', 'aanarsa', 'assorted', 'yogurt', 'creamy', 'sheer', 'pakode', 'kele', 'thepla', 'bonda', 'singhare', 'jalapeno', 'makki', 'chole', 'daal', 'pani', 'keerai', 'vadi', 'basundi', 'dhokli', 'dhokla', 'pohe', 'papdi', 'ras']\n","for i in range(df.shape[0]):\n","    if pd.isna(df.loc[i,'category']):\n","      for name in [name.lower() for name in df.loc[i,'name'].split()]:\n","          if name in default_category:\n","              df.loc[i,'category'] = name\n","\n","for i in range(df.shape[0]):\n","    if pd.isna(df.loc[i,'category']) and df.loc[i,'ingredient'] is not np.nan:\n","        for ingredient in [x.lower() for x in df.loc[i,'ingredient'].split()]:\n","            if ingredient in default_category:\n","                df.loc[i,'category'] =ingredient\n","\n","print('Catagory column with null values',df[df['category'].isnull()].shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q9jZg21UdRqA","executionInfo":{"status":"ok","timestamp":1683758616717,"user_tz":240,"elapsed":562,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"85f6029e-0162-497f-8c57-747af1a70cef"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["Catagory column with null values (319, 11)\n"]}]},{"cell_type":"code","source":["sns.countplot(x=df.category)\n","plt.xticks(rotation=90)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":512},"id":"02Vu0J7dlbQ3","executionInfo":{"status":"ok","timestamp":1683758618330,"user_tz":240,"elapsed":1618,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"6949c950-ee2a-4df3-b624-349c5aca2610"},"execution_count":38,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.countplot(x=df.sub_category)\n","plt.xticks(rotation=90)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":511},"id":"LTEkl5t6ohUa","executionInfo":{"status":"ok","timestamp":1683758618621,"user_tz":240,"elapsed":299,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"720b9668-8552-43cb-b1e8-297302d823ee"},"execution_count":39,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#### Removing all `null` values\n"],"metadata":{"id":"e5vuOWpHy9k0"}},{"cell_type":"code","source":["getMissingDataStats()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"xu_qhJqnrcuP","executionInfo":{"status":"ok","timestamp":1683758618622,"user_tz":240,"elapsed":29,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"8c2bc9cf-7a19-402f-82ce-1ec6822486ac"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Total Missing   Percent\n","diet                    482  0.329685\n","disease                 472  0.322845\n","sub_category            360  0.246238\n","category                319  0.218194\n","nutrient                100  0.068399\n","ingredient               12  0.008208\n","name                      0  0.000000\n","description               0  0.000000\n","veg_nonveg                0  0.000000\n","review                    0  0.000000\n","price                     0  0.000000"],"text/html":["\n","  <div id=\"df-01b32e9c-e608-4758-b095-419c5fe8f1f7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Total Missing</th>\n","      <th>Percent</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>diet</th>\n","      <td>482</td>\n","      <td>0.329685</td>\n","    </tr>\n","    <tr>\n","      <th>disease</th>\n","      <td>472</td>\n","      <td>0.322845</td>\n","    </tr>\n","    <tr>\n","      <th>sub_category</th>\n","      <td>360</td>\n","      <td>0.246238</td>\n","    </tr>\n","    <tr>\n","      <th>category</th>\n","      <td>319</td>\n","      <td>0.218194</td>\n","    </tr>\n","    <tr>\n","      <th>nutrient</th>\n","      <td>100</td>\n","      <td>0.068399</td>\n","    </tr>\n","    <tr>\n","      <th>ingredient</th>\n","      <td>12</td>\n","      <td>0.008208</td>\n","    </tr>\n","    <tr>\n","      <th>name</th>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>description</th>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>veg_nonveg</th>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>review</th>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>0</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-01b32e9c-e608-4758-b095-419c5fe8f1f7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-01b32e9c-e608-4758-b095-419c5fe8f1f7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-01b32e9c-e608-4758-b095-419c5fe8f1f7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["df_copy = df\n","df_copy.head(2)"],"metadata":{"id":"UvuFlczODHyZ","colab":{"base_uri":"https://localhost:8080/","height":208},"executionInfo":{"status":"ok","timestamp":1683758618623,"user_tz":240,"elapsed":28,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"867f1cfc-9630-4680-80a8-0fa6a62c9f59"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 name sub_category  \\\n","0      Paneer Roastie      healthy   \n","1  Lauki Besan Cheela      healthy   \n","\n","                                          ingredient  \\\n","0  1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...   \n","1  1 Cup lauki (bottle gourd), grated 1 1/2 cup b...   \n","\n","                                         description category veg_nonveg  \\\n","0  https://food.ndtv.com/recipe-paneer-roastie-95...   paneer        veg   \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...    besan        veg   \n","\n","   review                                           nutrient  \\\n","0       2  iron sodium iodine magnesium chloride copper p...   \n","1       1                        iron sodium iodine chloride   \n","\n","                                             disease  \\\n","0  hypertension diabeties kidney_disease anemia o...   \n","1  kidney_disease anemia obesity goitre heart_dis...   \n","\n","                                                diet  price  \n","0  vegan_diet high_protien_diet low_sodium_diet l...    625  \n","1  vegan_diet high_protien_diet low_sodium_diet l...    595  "],"text/html":["\n","  <div id=\"df-0a2ee945-06ee-4b91-86d2-9ad93581e02b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>sub_category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>category</th>\n","      <th>veg_nonveg</th>\n","      <th>review</th>\n","      <th>nutrient</th>\n","      <th>disease</th>\n","      <th>diet</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Paneer Roastie</td>\n","      <td>healthy</td>\n","      <td>1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>paneer</td>\n","      <td>veg</td>\n","      <td>2</td>\n","      <td>iron sodium iodine magnesium chloride copper p...</td>\n","      <td>hypertension diabeties kidney_disease anemia o...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>625</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lauki Besan Cheela</td>\n","      <td>healthy</td>\n","      <td>1 Cup lauki (bottle gourd), grated 1 1/2 cup b...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>besan</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine chloride</td>\n","      <td>kidney_disease anemia obesity goitre heart_dis...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>595</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0a2ee945-06ee-4b91-86d2-9ad93581e02b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0a2ee945-06ee-4b91-86d2-9ad93581e02b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0a2ee945-06ee-4b91-86d2-9ad93581e02b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["df = df_copy\n","\n","def not_empty_list(x):\n","    try:\n","      x = json.loads(x.replace('\\'','\"'))\n","      return len(x) != 0\n","    except:\n","      return True\n","\n","df = df[df['description'].notna()]\n","df = df[df['ingredient'].apply(lambda x: x is not np.nan and x != \"\")]\n","df = df[df['category'].notna()]\n","df = df[df['sub_category'].notna()]\n","df = df[df['nutrient'].notna()]\n","df = df[df['disease'].notna()]\n","df = df[df['diet'].notna()]\n","df = df.reset_index(drop=True)\n","\n","getMissingDataStats()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"5_9vELHIzB04","executionInfo":{"status":"ok","timestamp":1683758618623,"user_tz":240,"elapsed":26,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"fabbc541-a2ed-4301-aad4-129c2d8942af"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Total Missing  Percent\n","name                      0      0.0\n","sub_category              0      0.0\n","ingredient                0      0.0\n","description               0      0.0\n","category                  0      0.0\n","veg_nonveg                0      0.0\n","review                    0      0.0\n","nutrient                  0      0.0\n","disease                   0      0.0\n","diet                      0      0.0\n","price                     0      0.0"],"text/html":["\n","  <div id=\"df-cbc2272a-7744-4ceb-9aeb-49eafcf79b43\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Total Missing</th>\n","      <th>Percent</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>name</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>sub_category</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>ingredient</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>description</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>category</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>veg_nonveg</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>review</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>nutrient</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>disease</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>diet</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cbc2272a-7744-4ceb-9aeb-49eafcf79b43')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cbc2272a-7744-4ceb-9aeb-49eafcf79b43 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cbc2272a-7744-4ceb-9aeb-49eafcf79b43');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"AWXvWeqbEKJz","executionInfo":{"status":"ok","timestamp":1683758618624,"user_tz":240,"elapsed":26,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"67a5fab7-a32b-4fea-db41-dac71a65da6d"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                              name sub_category  \\\n","0                   Paneer Roastie      healthy   \n","1               Lauki Besan Cheela      healthy   \n","2                   Paneer Paratha      healthy   \n","3                     Makhana Dosa      healthy   \n","4  Persian Roasted Egg Plant Salad      healthy   \n","\n","                                          ingredient  \\\n","0  1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...   \n","1  1 Cup lauki (bottle gourd), grated 1 1/2 cup b...   \n","2  <b>For dough: </b> 2 cups Whole Wheat flour (a...   \n","3  1 Cup roasted makhana 1 cup rava (sooji or sem...   \n","4  2  eggplants  2  onions , chopped 2  tomatoes ...   \n","\n","                                         description category veg_nonveg  \\\n","0  https://food.ndtv.com/recipe-paneer-roastie-95...   paneer        veg   \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...    besan        veg   \n","2  https://food.ndtv.com/recipe-paneer-paratha-95...   paneer        veg   \n","3   https://food.ndtv.com/recipe-makhana-dosa-958002     dosa        veg   \n","4  https://food.ndtv.com/recipe-persian-roasted-e...    salad    non_veg   \n","\n","   review                                           nutrient  \\\n","0       2  iron sodium iodine magnesium chloride copper p...   \n","1       1                        iron sodium iodine chloride   \n","2       1  iron sodium iodine carbohydrates chloride phos...   \n","3       7                             sodium iodine chloride   \n","4       1  iron calcium sodium iodine vitamin_c vitamin_a...   \n","\n","                                             disease  \\\n","0  hypertension diabeties kidney_disease anemia o...   \n","1  kidney_disease anemia obesity goitre heart_dis...   \n","2  diabeties kidney_disease anemia obesity goitre...   \n","3        heart_disease goitre kidney_disease obesity   \n","4  hypertension eye_disease diabeties kidney_dise...   \n","\n","                                                diet  price  \n","0  vegan_diet high_protien_diet low_sodium_diet l...    625  \n","1  vegan_diet high_protien_diet low_sodium_diet l...    595  \n","2  vegan_diet high_protien_diet low_sodium_diet l...    535  \n","3                         vegan_diet low_sodium_diet    570  \n","4  vegan_diet mediterranean_diet high_fiber_diet ...    410  "],"text/html":["\n","  <div id=\"df-d5408545-b463-4070-bf8d-201c512608c6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>sub_category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>category</th>\n","      <th>veg_nonveg</th>\n","      <th>review</th>\n","      <th>nutrient</th>\n","      <th>disease</th>\n","      <th>diet</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Paneer Roastie</td>\n","      <td>healthy</td>\n","      <td>1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>paneer</td>\n","      <td>veg</td>\n","      <td>2</td>\n","      <td>iron sodium iodine magnesium chloride copper p...</td>\n","      <td>hypertension diabeties kidney_disease anemia o...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>625</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lauki Besan Cheela</td>\n","      <td>healthy</td>\n","      <td>1 Cup lauki (bottle gourd), grated 1 1/2 cup b...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>besan</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine chloride</td>\n","      <td>kidney_disease anemia obesity goitre heart_dis...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>595</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Paneer Paratha</td>\n","      <td>healthy</td>\n","      <td>&lt;b&gt;For dough: &lt;/b&gt; 2 cups Whole Wheat flour (a...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-paratha-95...</td>\n","      <td>paneer</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine carbohydrates chloride phos...</td>\n","      <td>diabeties kidney_disease anemia obesity goitre...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>535</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Makhana Dosa</td>\n","      <td>healthy</td>\n","      <td>1 Cup roasted makhana 1 cup rava (sooji or sem...</td>\n","      <td>https://food.ndtv.com/recipe-makhana-dosa-958002</td>\n","      <td>dosa</td>\n","      <td>veg</td>\n","      <td>7</td>\n","      <td>sodium iodine chloride</td>\n","      <td>heart_disease goitre kidney_disease obesity</td>\n","      <td>vegan_diet low_sodium_diet</td>\n","      <td>570</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Persian Roasted Egg Plant Salad</td>\n","      <td>healthy</td>\n","      <td>2  eggplants  2  onions , chopped 2  tomatoes ...</td>\n","      <td>https://food.ndtv.com/recipe-persian-roasted-e...</td>\n","      <td>salad</td>\n","      <td>non_veg</td>\n","      <td>1</td>\n","      <td>iron calcium sodium iodine vitamin_c vitamin_a...</td>\n","      <td>hypertension eye_disease diabeties kidney_dise...</td>\n","      <td>vegan_diet mediterranean_diet high_fiber_diet ...</td>\n","      <td>410</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5408545-b463-4070-bf8d-201c512608c6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d5408545-b463-4070-bf8d-201c512608c6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d5408545-b463-4070-bf8d-201c512608c6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":43}]},{"cell_type":"markdown","source":["### 10. Adding a column `user`"],"metadata":{"id":"Mc4SeIE10Qzj"}},{"cell_type":"code","source":["ids = [i for i in range(1, 101)]\n","user_col = []\n","for i in range(df.shape[0]):\n","    user_col.append(random.choice(ids))\n","\n","df['user_id'] = user_col\n","df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":292},"id":"AtyJ2G9t0Wcw","executionInfo":{"status":"ok","timestamp":1683758618832,"user_tz":240,"elapsed":233,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"e265e88c-e2a1-489e-b784-4458a6395de4"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 name sub_category  \\\n","0      Paneer Roastie      healthy   \n","1  Lauki Besan Cheela      healthy   \n","2      Paneer Paratha      healthy   \n","\n","                                          ingredient  \\\n","0  1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...   \n","1  1 Cup lauki (bottle gourd), grated 1 1/2 cup b...   \n","2  <b>For dough: </b> 2 cups Whole Wheat flour (a...   \n","\n","                                         description category veg_nonveg  \\\n","0  https://food.ndtv.com/recipe-paneer-roastie-95...   paneer        veg   \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...    besan        veg   \n","2  https://food.ndtv.com/recipe-paneer-paratha-95...   paneer        veg   \n","\n","   review                                           nutrient  \\\n","0       2  iron sodium iodine magnesium chloride copper p...   \n","1       1                        iron sodium iodine chloride   \n","2       1  iron sodium iodine carbohydrates chloride phos...   \n","\n","                                             disease  \\\n","0  hypertension diabeties kidney_disease anemia o...   \n","1  kidney_disease anemia obesity goitre heart_dis...   \n","2  diabeties kidney_disease anemia obesity goitre...   \n","\n","                                                diet  price  user_id  \n","0  vegan_diet high_protien_diet low_sodium_diet l...    625       58  \n","1  vegan_diet high_protien_diet low_sodium_diet l...    595        9  \n","2  vegan_diet high_protien_diet low_sodium_diet l...    535       16  "],"text/html":["\n","  <div id=\"df-79d71ed8-bab4-4248-98d8-b2e07fe640c3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>sub_category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>category</th>\n","      <th>veg_nonveg</th>\n","      <th>review</th>\n","      <th>nutrient</th>\n","      <th>disease</th>\n","      <th>diet</th>\n","      <th>price</th>\n","      <th>user_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Paneer Roastie</td>\n","      <td>healthy</td>\n","      <td>1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>paneer</td>\n","      <td>veg</td>\n","      <td>2</td>\n","      <td>iron sodium iodine magnesium chloride copper p...</td>\n","      <td>hypertension diabeties kidney_disease anemia o...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>625</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lauki Besan Cheela</td>\n","      <td>healthy</td>\n","      <td>1 Cup lauki (bottle gourd), grated 1 1/2 cup b...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>besan</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine chloride</td>\n","      <td>kidney_disease anemia obesity goitre heart_dis...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>595</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Paneer Paratha</td>\n","      <td>healthy</td>\n","      <td>&lt;b&gt;For dough: &lt;/b&gt; 2 cups Whole Wheat flour (a...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-paratha-95...</td>\n","      <td>paneer</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine carbohydrates chloride phos...</td>\n","      <td>diabeties kidney_disease anemia obesity goitre...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>535</td>\n","      <td>16</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-79d71ed8-bab4-4248-98d8-b2e07fe640c3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-79d71ed8-bab4-4248-98d8-b2e07fe640c3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-79d71ed8-bab4-4248-98d8-b2e07fe640c3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":44}]},{"cell_type":"markdown","source":["### 11. Adding a column `mead_id`"],"metadata":{"id":"Us74Pa9V1nGP"}},{"cell_type":"code","source":["meal_id_map = {}\n","for i, meal_name in enumerate(list(df.name.unique())):\n","    meal_id_map[meal_name] = f'meal_id_{i+1}'\n","\n","meal_col = []\n","for i in range(df.shape[0]):\n","    meal_col.append(meal_id_map[df.loc[i,'name']])\n","\n","df['meal_id'] = meal_col\n","df.head(3)"],"metadata":{"id":"VN_Rf29a1p4h","colab":{"base_uri":"https://localhost:8080/","height":292},"executionInfo":{"status":"ok","timestamp":1683758618833,"user_tz":240,"elapsed":47,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"31500a10-76cf-409c-b687-0570f13e64e2"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 name sub_category  \\\n","0      Paneer Roastie      healthy   \n","1  Lauki Besan Cheela      healthy   \n","2      Paneer Paratha      healthy   \n","\n","                                          ingredient  \\\n","0  1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...   \n","1  1 Cup lauki (bottle gourd), grated 1 1/2 cup b...   \n","2  <b>For dough: </b> 2 cups Whole Wheat flour (a...   \n","\n","                                         description category veg_nonveg  \\\n","0  https://food.ndtv.com/recipe-paneer-roastie-95...   paneer        veg   \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...    besan        veg   \n","2  https://food.ndtv.com/recipe-paneer-paratha-95...   paneer        veg   \n","\n","   review                                           nutrient  \\\n","0       2  iron sodium iodine magnesium chloride copper p...   \n","1       1                        iron sodium iodine chloride   \n","2       1  iron sodium iodine carbohydrates chloride phos...   \n","\n","                                             disease  \\\n","0  hypertension diabeties kidney_disease anemia o...   \n","1  kidney_disease anemia obesity goitre heart_dis...   \n","2  diabeties kidney_disease anemia obesity goitre...   \n","\n","                                                diet  price  user_id  \\\n","0  vegan_diet high_protien_diet low_sodium_diet l...    625       58   \n","1  vegan_diet high_protien_diet low_sodium_diet l...    595        9   \n","2  vegan_diet high_protien_diet low_sodium_diet l...    535       16   \n","\n","     meal_id  \n","0  meal_id_1  \n","1  meal_id_2  \n","2  meal_id_3  "],"text/html":["\n","  <div id=\"df-ee096356-079e-4191-8720-2f099439b307\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>sub_category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>category</th>\n","      <th>veg_nonveg</th>\n","      <th>review</th>\n","      <th>nutrient</th>\n","      <th>disease</th>\n","      <th>diet</th>\n","      <th>price</th>\n","      <th>user_id</th>\n","      <th>meal_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Paneer Roastie</td>\n","      <td>healthy</td>\n","      <td>1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>paneer</td>\n","      <td>veg</td>\n","      <td>2</td>\n","      <td>iron sodium iodine magnesium chloride copper p...</td>\n","      <td>hypertension diabeties kidney_disease anemia o...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>625</td>\n","      <td>58</td>\n","      <td>meal_id_1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lauki Besan Cheela</td>\n","      <td>healthy</td>\n","      <td>1 Cup lauki (bottle gourd), grated 1 1/2 cup b...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>besan</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine chloride</td>\n","      <td>kidney_disease anemia obesity goitre heart_dis...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>595</td>\n","      <td>9</td>\n","      <td>meal_id_2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Paneer Paratha</td>\n","      <td>healthy</td>\n","      <td>&lt;b&gt;For dough: &lt;/b&gt; 2 cups Whole Wheat flour (a...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-paratha-95...</td>\n","      <td>paneer</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine carbohydrates chloride phos...</td>\n","      <td>diabeties kidney_disease anemia obesity goitre...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>535</td>\n","      <td>16</td>\n","      <td>meal_id_3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee096356-079e-4191-8720-2f099439b307')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ee096356-079e-4191-8720-2f099439b307 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ee096356-079e-4191-8720-2f099439b307');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":45}]},{"cell_type":"markdown","source":["### 12. Final Dataset"],"metadata":{"id":"IUXLAYYn_ta5"}},{"cell_type":"code","source":["df.head(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"wRvMQ7Zc_vML","executionInfo":{"status":"ok","timestamp":1683758618834,"user_tz":240,"elapsed":46,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"831b54f6-9eb0-4fdf-ce1b-6c545d1018a9"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 name sub_category  \\\n","0      Paneer Roastie      healthy   \n","1  Lauki Besan Cheela      healthy   \n","\n","                                          ingredient  \\\n","0  1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...   \n","1  1 Cup lauki (bottle gourd), grated 1 1/2 cup b...   \n","\n","                                         description category veg_nonveg  \\\n","0  https://food.ndtv.com/recipe-paneer-roastie-95...   paneer        veg   \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...    besan        veg   \n","\n","   review                                           nutrient  \\\n","0       2  iron sodium iodine magnesium chloride copper p...   \n","1       1                        iron sodium iodine chloride   \n","\n","                                             disease  \\\n","0  hypertension diabeties kidney_disease anemia o...   \n","1  kidney_disease anemia obesity goitre heart_dis...   \n","\n","                                                diet  price  user_id  \\\n","0  vegan_diet high_protien_diet low_sodium_diet l...    625       58   \n","1  vegan_diet high_protien_diet low_sodium_diet l...    595        9   \n","\n","     meal_id  \n","0  meal_id_1  \n","1  meal_id_2  "],"text/html":["\n","  <div id=\"df-07ad0c8c-d8d7-425e-8999-b69594221b27\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>sub_category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>category</th>\n","      <th>veg_nonveg</th>\n","      <th>review</th>\n","      <th>nutrient</th>\n","      <th>disease</th>\n","      <th>diet</th>\n","      <th>price</th>\n","      <th>user_id</th>\n","      <th>meal_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Paneer Roastie</td>\n","      <td>healthy</td>\n","      <td>1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>paneer</td>\n","      <td>veg</td>\n","      <td>2</td>\n","      <td>iron sodium iodine magnesium chloride copper p...</td>\n","      <td>hypertension diabeties kidney_disease anemia o...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>625</td>\n","      <td>58</td>\n","      <td>meal_id_1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lauki Besan Cheela</td>\n","      <td>healthy</td>\n","      <td>1 Cup lauki (bottle gourd), grated 1 1/2 cup b...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>besan</td>\n","      <td>veg</td>\n","      <td>1</td>\n","      <td>iron sodium iodine chloride</td>\n","      <td>kidney_disease anemia obesity goitre heart_dis...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>595</td>\n","      <td>9</td>\n","      <td>meal_id_2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-07ad0c8c-d8d7-425e-8999-b69594221b27')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-07ad0c8c-d8d7-425e-8999-b69594221b27 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-07ad0c8c-d8d7-425e-8999-b69594221b27');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["getMissingDataStats()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"_he_ZTNzvB-Y","executionInfo":{"status":"ok","timestamp":1683758618835,"user_tz":240,"elapsed":44,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"ad18f221-d791-4355-d58c-abb22387b708"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Total Missing  Percent\n","name                      0      0.0\n","sub_category              0      0.0\n","ingredient                0      0.0\n","description               0      0.0\n","category                  0      0.0\n","veg_nonveg                0      0.0\n","review                    0      0.0\n","nutrient                  0      0.0\n","disease                   0      0.0\n","diet                      0      0.0\n","price                     0      0.0\n","user_id                   0      0.0\n","meal_id                   0      0.0"],"text/html":["\n","  <div id=\"df-ee4de859-426a-4bde-944c-ae83dcecdf83\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Total Missing</th>\n","      <th>Percent</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>name</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>sub_category</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>ingredient</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>description</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>category</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>veg_nonveg</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>review</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>nutrient</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>disease</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>diet</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>meal_id</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee4de859-426a-4bde-944c-ae83dcecdf83')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ee4de859-426a-4bde-944c-ae83dcecdf83 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ee4de859-426a-4bde-944c-ae83dcecdf83');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":47}]},{"cell_type":"markdown","source":["### 13. Generating Demo Dataset for 100 user profile"],"metadata":{"id":"yovtEn3J_5HF"}},{"cell_type":"code","source":["df_profiles = df[['user_id','veg_nonveg','nutrient','disease','diet']]\n","\n","df_profiles = df_profiles.drop_duplicates('user_id').sort_values('user_id').reset_index(drop=True)\n","\n","userid_col = []\n","for i in range(df_profiles.shape[0]):\n","    id = df_profiles.loc[i,'user_id']\n","    userid_col.append(f'user_{id}')\n","df_profiles['user_id'] = userid_col\n","df_profiles.to_csv('user_profiles.csv',index=False)\n","df_profiles.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"wzLJ43j1_9WV","executionInfo":{"status":"ok","timestamp":1683758618835,"user_tz":240,"elapsed":42,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"056ada2f-a00d-44ed-e0a6-38a223a88858"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  user_id veg_nonveg                                           nutrient  \\\n","0  user_1        veg      sodium iodine selenium carbohydrates chloride   \n","1  user_2        veg                       sodium iodine chloride fiber   \n","2  user_3        veg  iron sodium iodine magnesium selenium vitamin_...   \n","\n","                                             disease  \\\n","0  diabeties kidney_disease goitre obesity heart_...   \n","1  hypertension diabeties kidney_disease obesity ...   \n","2  hypertension diabeties kidney_disease anemia o...   \n","\n","                                                diet  \n","0  vegan_diet high_fiber_diet high_protien_diet l...  \n","1  vegan_diet high_fiber_diet dash_diet high_prot...  \n","2  vegan_diet high_protien_diet low_sodium_diet l...  "],"text/html":["\n","  <div id=\"df-a7ee2e3d-cf81-46cc-a3aa-a1d7ec322a66\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>veg_nonveg</th>\n","      <th>nutrient</th>\n","      <th>disease</th>\n","      <th>diet</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>user_1</td>\n","      <td>veg</td>\n","      <td>sodium iodine selenium carbohydrates chloride</td>\n","      <td>diabeties kidney_disease goitre obesity heart_...</td>\n","      <td>vegan_diet high_fiber_diet high_protien_diet l...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>user_2</td>\n","      <td>veg</td>\n","      <td>sodium iodine chloride fiber</td>\n","      <td>hypertension diabeties kidney_disease obesity ...</td>\n","      <td>vegan_diet high_fiber_diet dash_diet high_prot...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>user_3</td>\n","      <td>veg</td>\n","      <td>iron sodium iodine magnesium selenium vitamin_...</td>\n","      <td>hypertension diabeties kidney_disease anemia o...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7ee2e3d-cf81-46cc-a3aa-a1d7ec322a66')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a7ee2e3d-cf81-46cc-a3aa-a1d7ec322a66 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a7ee2e3d-cf81-46cc-a3aa-a1d7ec322a66');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["df_profiles.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WbyBBgcFLfpF","executionInfo":{"status":"ok","timestamp":1683758618836,"user_tz":240,"elapsed":42,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"3903dfb3-c496-47ab-bd5d-534c63f8b9ad"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 100 entries, 0 to 99\n","Data columns (total 5 columns):\n"," #   Column      Non-Null Count  Dtype \n","---  ------      --------------  ----- \n"," 0   user_id     100 non-null    object\n"," 1   veg_nonveg  100 non-null    object\n"," 2   nutrient    100 non-null    object\n"," 3   disease     100 non-null    object\n"," 4   diet        100 non-null    object\n","dtypes: object(5)\n","memory usage: 4.0+ KB\n"]}]},{"cell_type":"markdown","source":["### 14. Demo Data for User Recent Activity (Min 30 Days)"],"metadata":{"id":"XvsH-Y-3BDf_"}},{"cell_type":"code","source":["df_recent = df[['user_id','meal_id']]\n","user_id_col = []\n","for i in range(df_recent.shape[0]):\n","    id = df_recent.loc[i,'user_id']\n","    user_id_col.append(f'user_{id}')\n","df_recent['user_id'] = user_id_col"],"metadata":{"id":"k7M7g5kWBIKQ","executionInfo":{"status":"ok","timestamp":1683758618836,"user_tz":240,"elapsed":36,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["rated = []\n","liked = []\n","searched = []\n","purchased = []\n","for i in range(df.shape[0]):\n","    rated.append(random.randint(0,1)) # if rated > 5\n","    liked.append(random.randint(0,1))\n","    searched.append(random.randint(0,1))\n","    purchased.append(random.randint(0,1))\n","    \n","df_recent['rated'] =  rated\n","df_recent['liked'] = liked\n","df_recent['searched'] = searched\n","df_recent['purchased'] = purchased\n","df_recent = df_recent[((df_recent.rated+df_recent.liked+df_recent.searched)>=1) & ((df_recent.rated+df_recent.liked+df_recent.searched)<2)]\n","df_recent =df_recent.head(30).reset_index(drop=True)\n","dt = datetime.datetime(2020, 3, 1)\n","end = datetime.datetime(2020, 3, 30)\n","step = datetime.timedelta(hours=2,seconds=34)\n","\n","result = []\n","\n","while dt < end:\n","    result.append(dt.strftime('%Y-%m-%d %H:%M:%S'))\n","    dt += step\n","    \n","    \n","\n","date = []\n","for i in range(30):\n","    date.append(random.choice(result))\n","    \n","date = sorted(date)\n","df_recent['timestamp'] = date\n","df_recent.to_csv('recent_activity.csv',index=False)\n","df_recent.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"eZrNqaDuBSyM","executionInfo":{"status":"ok","timestamp":1683758618837,"user_tz":240,"elapsed":36,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"1ddf74a3-65cb-46e8-c214-281baad6d21d"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   user_id    meal_id  rated  liked  searched  purchased            timestamp\n","0  user_58  meal_id_1      0      0         1          0  2020-03-01 18:05:06\n","1   user_9  meal_id_2      1      0         0          1  2020-03-02 02:07:22\n","2  user_16  meal_id_3      0      0         1          1  2020-03-02 20:12:28\n","3   user_7  meal_id_4      1      0         0          1  2020-03-04 20:26:04\n","4  user_86  meal_id_5      0      1         0          1  2020-03-04 22:26:38"],"text/html":["\n","  <div id=\"df-53657a0b-e3b2-40bf-a8d5-327368c2eee3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>meal_id</th>\n","      <th>rated</th>\n","      <th>liked</th>\n","      <th>searched</th>\n","      <th>purchased</th>\n","      <th>timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>user_58</td>\n","      <td>meal_id_1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2020-03-01 18:05:06</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>user_9</td>\n","      <td>meal_id_2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2020-03-02 02:07:22</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>user_16</td>\n","      <td>meal_id_3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2020-03-02 20:12:28</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>user_7</td>\n","      <td>meal_id_4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2020-03-04 20:26:04</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>user_86</td>\n","      <td>meal_id_5</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2020-03-04 22:26:38</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-53657a0b-e3b2-40bf-a8d5-327368c2eee3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-53657a0b-e3b2-40bf-a8d5-327368c2eee3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-53657a0b-e3b2-40bf-a8d5-327368c2eee3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["### 15. Dataset to recommend with"],"metadata":{"id":"6Q-A47CZBkvZ"}},{"cell_type":"code","source":["df = df[['meal_id','name','category','ingredient','description','veg_nonveg','nutrient','disease','diet','price', 'user_id']]\n","df.to_csv('dataset.csv',index=False)\n","df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"5puItD-yBtb6","executionInfo":{"status":"ok","timestamp":1683758618837,"user_tz":240,"elapsed":35,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"b3519858-0dd0-4e97-efbe-dace5c52e63c"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     meal_id                name category  \\\n","0  meal_id_1      Paneer Roastie   paneer   \n","1  meal_id_2  Lauki Besan Cheela    besan   \n","2  meal_id_3      Paneer Paratha   paneer   \n","\n","                                          ingredient  \\\n","0  1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...   \n","1  1 Cup lauki (bottle gourd), grated 1 1/2 cup b...   \n","2  <b>For dough: </b> 2 cups Whole Wheat flour (a...   \n","\n","                                         description veg_nonveg  \\\n","0  https://food.ndtv.com/recipe-paneer-roastie-95...        veg   \n","1  https://food.ndtv.com/recipe-lauki-besan-cheel...        veg   \n","2  https://food.ndtv.com/recipe-paneer-paratha-95...        veg   \n","\n","                                            nutrient  \\\n","0  iron sodium iodine magnesium chloride copper p...   \n","1                        iron sodium iodine chloride   \n","2  iron sodium iodine carbohydrates chloride phos...   \n","\n","                                             disease  \\\n","0  hypertension diabeties kidney_disease anemia o...   \n","1  kidney_disease anemia obesity goitre heart_dis...   \n","2  diabeties kidney_disease anemia obesity goitre...   \n","\n","                                                diet  price  user_id  \n","0  vegan_diet high_protien_diet low_sodium_diet l...    625       58  \n","1  vegan_diet high_protien_diet low_sodium_diet l...    595        9  \n","2  vegan_diet high_protien_diet low_sodium_diet l...    535       16  "],"text/html":["\n","  <div id=\"df-183ec881-5d30-466d-ac20-d156844ff752\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>meal_id</th>\n","      <th>name</th>\n","      <th>category</th>\n","      <th>ingredient</th>\n","      <th>description</th>\n","      <th>veg_nonveg</th>\n","      <th>nutrient</th>\n","      <th>disease</th>\n","      <th>diet</th>\n","      <th>price</th>\n","      <th>user_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>meal_id_1</td>\n","      <td>Paneer Roastie</td>\n","      <td>paneer</td>\n","      <td>1 Cup Suji 1 cup Curd  1/4 cup Capsicum, finel...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-roastie-95...</td>\n","      <td>veg</td>\n","      <td>iron sodium iodine magnesium chloride copper p...</td>\n","      <td>hypertension diabeties kidney_disease anemia o...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>625</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>meal_id_2</td>\n","      <td>Lauki Besan Cheela</td>\n","      <td>besan</td>\n","      <td>1 Cup lauki (bottle gourd), grated 1 1/2 cup b...</td>\n","      <td>https://food.ndtv.com/recipe-lauki-besan-cheel...</td>\n","      <td>veg</td>\n","      <td>iron sodium iodine chloride</td>\n","      <td>kidney_disease anemia obesity goitre heart_dis...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>595</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>meal_id_3</td>\n","      <td>Paneer Paratha</td>\n","      <td>paneer</td>\n","      <td>&lt;b&gt;For dough: &lt;/b&gt; 2 cups Whole Wheat flour (a...</td>\n","      <td>https://food.ndtv.com/recipe-paneer-paratha-95...</td>\n","      <td>veg</td>\n","      <td>iron sodium iodine carbohydrates chloride phos...</td>\n","      <td>diabeties kidney_disease anemia obesity goitre...</td>\n","      <td>vegan_diet high_protien_diet low_sodium_diet l...</td>\n","      <td>535</td>\n","      <td>16</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-183ec881-5d30-466d-ac20-d156844ff752')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-183ec881-5d30-466d-ac20-d156844ff752 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-183ec881-5d30-466d-ac20-d156844ff752');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":52}]},{"cell_type":"markdown","source":["### Analysis Images"],"metadata":{"id":"GSPz60JPCKJN"}},{"cell_type":"code","source":["plt.figure(figsize=(12,5))\n","disease = []\n","for i in range(df.shape[0]):\n","    disease.extend(df.loc[i,'disease'].split())\n","\n","sns.countplot(x=disease)\n","plt.xticks(rotation=45)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"_K422xyQCL0F","executionInfo":{"status":"ok","timestamp":1683758619337,"user_tz":240,"elapsed":534,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"140e5582-357f-43b4-936d-6879467320d9"},"execution_count":53,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(12,5))\n","diet = []\n","for i in range(df.shape[0]):\n","    diet.extend(df.loc[i,'diet'].split())\n","        \n","sns.countplot(x=diet)\n","plt.xticks(rotation=45)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"0n9YKBcuDM54","executionInfo":{"status":"ok","timestamp":1683758619694,"user_tz":240,"elapsed":364,"user":{"displayName":"Nikhita Bharat Upadhye","userId":"04343752995442062755"}},"outputId":"2f1912c4-e7f9-408b-dd72-0cd4b3c5df5a"},"execution_count":54,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}
